{"version":3,"sources":["services/auth.js","components/Auth/Login.jsx","components/Auth/SignUp.jsx","components/Home.jsx","services/bookmark.js","components/Tags/TagsList.jsx","components/Bookmarks/BookmarksList.jsx","components/Bookmarks/Add.jsx","components/Bookmarks/Search.jsx","components/AppNavbar.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["service","axios","create","baseURL","process","withCredentials","logout","post","then","response","data","catch","error","Promise","reject","useFormInput","initialValue","_useState","useState","_useState2","Object","slicedToArray","value","setValue","onChange","event","target","Login","props","email","password","_useState3","_useState4","loginError","setLoginError","_useState5","_useState6","errorMessage","setErrorMessage","react_default","a","createElement","className","Form_default","display","onSubmit","preventDefault","request","status","login","user","setUser","history","push","Group","as","Row","controlId","Col_default","Alert_default","variant","onClose","show","dismissible","Heading","Fragment","Control","assign","size","type","name","placeholder","required","Button_default","SignUp","signUpError","setSignUpError","signup","Home","bookmarks","get","TagsList","activeTags","tagIds","Set","tagNames","length","map","bookmark","_tags","forEach","tag","add","_id","ids","toConsumableArray","tagsList","tagName","idx","ListGroup","Item","style","padding","marginTop","marginBottom","backgroundColor","action","onClick","tagId","classList","contains","indexOfTag","indexOf","splice","handleTagClick","toggle","handleClick","key","BookmarksList","state","bookmarksList","filteredBookmarks","userLoggedIn","_this","getBookmarks","setState","alert","assertThisInitialized","_filteredBookmarks","filter","find","includes","prevState","this","prevProps","Jumbotron","height","es_Row","es_Col","xs","Tags_TagsList","lnk","borderRadius","href","url","title","es_Alert","Component","AlertError","InputGroupElement","InputGroup","children","InputGroupPrependElement","Prepend","Text","groupText","FormControlElement","FormControl","focus","toString","aria-describedby","ButtonElement","es_Button","text","AddNewBookmark","setTitle","setUrl","_useState7","_useState8","tags","setTags","_useState9","_useState10","showModal","setShowModal","_useState11","_useState12","saving","setSaving","_useState13","_useState14","setError","handleChange","_event$target","newValue","toLowerCase","Add_ButtonElement","Modal","centered","autoFocus","onHide","Header","Title","Body","Add_InputGroupElement","Add_InputGroupPrependElement","Add_FormControlElement","htmlFor","Footer","arrayOfTags","split","trim","addBookmark","saveUrl","newBookmark","message","Add_AlertError","SearchBookmarks","input","setInput","hidden","filterBookmarks","AppNavbar","handleLogout","Navbar_default","sticky","bg","expand","Brand","react_router_dom","to","textDecoration","color","Add","Toggle","aria-controls","Collapse","id","Nav_default","inline","Search","Link","disabled","browserHistory","createBrowserHistory","App","loggedInUser","setLoggedInUser","useEffect","setBookmark","react_router","components_AppNavbar","exact","path","component","render","Auth_SignUp","Login_Login","Bookmarks_BookmarksList","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.de9688fa.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst service = axios.create({\n  baseURL: process.env.REACT_APP_SERVER_API_URL,\n  withCredentials: true\n})\n\nconst signup = (name, email, password) => {\n  return service\n    .post('/auth/signup', { name, email, password })\n    .then((response) => {\n      return response.data\n    })\n    .catch((error) => {\n      return Promise.reject(error.request.status)\n    })\n}\n\nconst login = (email, password) => {\n  return service\n    .post('/auth/login', { email, password })\n    .then((response) => {\n      return response.data\n    })\n    .catch((error) => {\n      return Promise.reject(error.request.status)\n    })\n}\n\n// TODO: Return a rejected Promise in the catch\nconst logout = () => {\n  return service\n    .post('/auth/logout')\n    .then((response) => response.data)\n    .catch((error) => Promise.reject(error))\n}\n\nconst loggedIn = () => {\n  return service.get('/auth/loggedin').then((response) => response.data)\n}\n\nexport { signup, login, logout, loggedIn }\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react'\nimport Alert from 'react-bootstrap/Alert'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\n\nimport { login } from '../../services/auth'\n\nimport '../../assets/auth/auth.css'\n\n// TODO: Move this to a proper file\nconst useFormInput = (initialValue) => {\n  const [ value, setValue ] = useState(initialValue)\n\n  const handleChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  return {\n    value,\n    onChange: handleChange\n  }\n}\n\nconst Login = (props) => {\n  const email = useFormInput('')\n  const password = useFormInput('')\n  const [ loginError, setLoginError ] = useState(false)\n  const [ errorMessage, setErrorMessage ] = useState('')\n\n  const onSubmit = (event) => {\n    event.preventDefault()\n    setLoginError(false)\n    login(email.value, password.value)\n      .then((user) => {\n        props.setUser(user)\n        props.history.push('/bookmarks')\n      })\n      .catch((error) => {\n        setLoginError(true)\n        switch (error) {\n          case 0:\n            // setErrorMessage('Could not connect to server, try again later. 🙁')\n            setErrorMessage('Could not connect to server 🙁')\n            break\n          case 401:\n            setErrorMessage('Incorrect username or password.')\n            break\n          default:\n            setErrorMessage('Something went wrong... 😩')\n            break\n        }\n        props.setUser(null)\n      })\n  }\n\n  const handleDismiss = (show) => setLoginError(show)\n\n  return (\n    <div className='container'>\n      <Form display='block' onSubmit={onSubmit}>\n        <Form.Group as={Row} controlId='errorMessage'>\n          <Col>\n            {loginError ? (\n              <Alert variant='danger' onClose={handleDismiss} dismissible>\n                <Alert.Heading>You got an error</Alert.Heading>\n                <p>{errorMessage}</p>\n              </Alert>\n            ) : (\n              <React.Fragment />\n            )}\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formPlaintextEmail'>\n          <Col>\n            <Form.Control\n              size='lg'\n              type='email'\n              name='email'\n              placeholder='example@email.com'\n              {...email}\n              required\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formPlaintextPassword'>\n          <Col>\n            <Form.Control\n              size='lg'\n              type='password'\n              name='password'\n              placeholder='Enter your password'\n              {...password}\n              required\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group>\n          <Button type='submit' variant='outline-primary'>\n            Login\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n\nexport { useFormInput, Login }\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react'\nimport Alert from 'react-bootstrap/Alert'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport { signup } from '../../services/auth'\nimport { useFormInput } from './Login'\n\nimport '../../assets/auth/auth.css'\n\nconst SignUp = (props) => {\n  const name = useFormInput('')\n  const email = useFormInput('')\n  const password = useFormInput('')\n  const [ signUpError, setSignUpError ] = useState(false)\n  const [ errorMessage, setErrorMessage ] = useState('')\n\n  const onSubmit = (event) => {\n    event.preventDefault()\n    signup(name.value, email.value, password.value)\n      .then((user) => {\n        props.setUser(user)\n        props.history.push('/bookmarks')\n      })\n      .catch((error) => {\n        props.setUser(null)\n        setSignUpError(true)\n        switch (error) {\n          case 0:\n            setErrorMessage('Could not connect to server 🙁')\n            break\n          case 409:\n            setErrorMessage('The email already exists')\n            break\n          default:\n            setErrorMessage('Something went wrong... 😩')\n            break\n        }\n      })\n  }\n\n  const handleDismiss = (show) => setSignUpError(show)\n\n  return (\n    <div className='container'>\n      <Form display='block' onSubmit={onSubmit}>\n        <Form.Group as={Row} controlId='errorMessage'>\n          <Col>\n            {signUpError && (\n              <Alert variant='danger' onClose={handleDismiss} dismissible>\n                <Alert.Heading>You got an error </Alert.Heading>\n                <p>{errorMessage}</p>\n              </Alert>\n            )}\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formPlaintextPassword'>\n          <Col>\n            <Form.Control\n              size='lg'\n              type='text'\n              name='name'\n              placeholder='Enter your name'\n              {...name}\n              required\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formPlaintextPassword'>\n          <Col>\n            <Form.Control\n              size='lg'\n              type='email'\n              name='email'\n              placeholder='example@email.com'\n              {...email}\n              required\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formPlaintextPassword'>\n          <Col>\n            <Form.Control\n              size='lg'\n              type='password'\n              name='password'\n              placeholder='Enter your password'\n              required\n              {...password}\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group>\n          <Button type='submit' variant='outline-primary'>\n            Sign up\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n\nexport default SignUp\n","import React from 'react'\n\nimport 'assets/Home.css'\n\nconst Home = () => {\n  return (\n    <div className='container left-box'>\n      <div className='row'>\n        <div className='col-md-8'>\n          <span className='anim-left'> A place where your bookmarks</span>\n          <span className='anim-bottom'> can call Home.</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","import axios from 'axios'\n\nconst service = axios.create({\n  baseURL: process.env.REACT_APP_SERVER_API_URL,\n  withCredentials: true\n})\n\nconst addBookmark = (title, url, tags) => {\n  return service\n    .post('/bookmark', { title, url, tags })\n    .then((response) => response.data)\n    .catch((error) => Promise.reject(error))\n}\n\nconst bookmarks = () => {\n  return service.get('/bookmark').then((response) => response.data).catch((error) => error)\n}\n\nconst getBookmarkById = (_id) => {\n  service.get(`/bookmark/:${_id}`).then((bookmark) => bookmark).catch((error) => error)\n}\n\nconst editBookmark = (_id, title, url) => {\n  service.put(`/bookmark/:${_id}`, { title, url }).then((bookmark) => bookmark).catch((error) => error)\n}\n\nconst deleteBookmark = (_id) => {\n  service.delete(`/bookmark/:${_id}`).then((response) => response.data).catch((error) => error)\n}\n\nexport { addBookmark, bookmarks, getBookmarkById, editBookmark, deleteBookmark }\n","import React from 'react'\nimport { ListGroup } from 'react-bootstrap'\n\nconst TagsList = (props) => {\n  const { bookmarks, activeTags } = props\n\n  const handleClick = (tagId, tagName, event) => {\n    if (event.target.classList.contains('active')) {\n      event.target.style.backgroundColor = 'white'\n      const indexOfTag = activeTags.indexOf(tagId)\n      if (indexOfTag !== -1) activeTags.splice(indexOfTag, 1)\n      props.handleTagClick()\n    } else {\n      event.target.style.backgroundColor = 'blue'\n      activeTags.push(tagId)\n      props.handleTagClick()\n    }\n    event.target.classList.toggle('active')\n  }\n\n  // Since a bookmark can have multiple tags I was having duplicated tags\n  // To avoid that I am splitting tags id's and names in two separated Sets\n  const tagIds = new Set()\n  const tagNames = new Set()\n  if (bookmarks.length)\n    bookmarks.map((bookmark) =>\n      bookmark._tags.forEach((tag) => {\n        tagIds.add(tag._id)\n        tagNames.add(tag.name)\n      })\n    )\n  const ids = [ ...tagIds ]\n  const tagsList = [ ...tagNames ].map((tagName, idx) => (\n    <ListGroup.Item\n      style={{\n        padding: '10px 20px',\n        marginTop: '1px',\n        marginBottom: '1px',\n        backgroundColor: '#f9f9f9'\n      }}\n      action\n      onClick={(event) => handleClick(ids[idx], tagName, event)}\n      as='li'\n      key={ids[idx]}\n    >\n      {tagName}\n    </ListGroup.Item>\n  ))\n  return (\n    <ListGroup\n      as='ul'\n      style={{\n        padding: '0 20px'\n      }}\n    >\n      {tagsList}\n    </ListGroup>\n  )\n}\n\nexport default TagsList\n","/* eslint-disable react/no-did-update-set-state */\n/* eslint-disable react/no-array-index-key */\nimport React, { Component } from 'react'\nimport { Alert, Col, Jumbotron, ListGroup, Row } from 'react-bootstrap'\nimport { bookmarks } from 'services/bookmark'\nimport { TagsList } from 'components/Tags'\n\nclass BookmarksList extends Component {\n  state = {\n    bookmarksList: [],\n    filteredBookmarks: [],\n    userLoggedIn: this.props.userLoggedIn\n  }\n  activeTags = []\n\n  componentDidMount() {\n    this.getBookmarks()\n  }\n\n  // componentDidUpdate(prevProps, prevState) {\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.setState({ userLoggedIn: this.props.userLoggedIn })\n      this.getBookmarks()\n    }\n  }\n\n  getBookmarks = () => {\n    bookmarks()\n      .then((bookmarks) => {\n        this.setState({ bookmarksList: bookmarks, filteredBookmarks: bookmarks })\n      })\n      .catch((error) => alert(error))\n  }\n\n  handleTagClick = () => {\n    const { activeTags } = this\n    const _filteredBookmarks = []\n    if (activeTags.length) {\n      activeTags.forEach((tagId) => {\n        const _bookmarks = this.state.bookmarksList.filter((bookmark) =>\n          bookmark._tags.find((tag) => tag._id === tagId)\n        )\n        _bookmarks.forEach((bookmark) => {\n          if (!_filteredBookmarks.includes(bookmark)) _filteredBookmarks.push(bookmark)\n        })\n      })\n      this.setState({ filteredBookmarks: _filteredBookmarks })\n    } else {\n      this.setState((prevState) => ({ filteredBookmarks: prevState.bookmarksList }))\n    }\n  }\n\n  render() {\n    return (\n      <Jumbotron style={{ height: '100vh' }}>\n        <Row>\n          <Col xs={2}>\n            <TagsList\n              activeTags={this.activeTags}\n              handleTagClick={this.handleTagClick}\n              bookmarks={this.state.bookmarksList}\n            />\n          </Col>\n          <Col xs={9}>\n            {this.state.userLoggedIn ? (\n              <React.Fragment>\n                <ListGroup variant='flush'>\n                  {this.state.filteredBookmarks.map((lnk, idx) => (\n                    // TODO: Move the styling to a proper css file\n                    <ListGroup.Item\n                      style={{\n                        padding: '25px',\n                        marginTop: '2px',\n                        marginBottom: '5px',\n                        borderRadius: '10px 10px 10px 10px'\n                      }}\n                      key={idx}\n                      as='a'\n                      target='_blank'\n                      href={lnk.url}\n                    >\n                      {lnk.title}\n                      {' - '}\n                      {lnk.url}\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                <Alert variant='danger'>\n                  <Alert.Heading>Protected content</Alert.Heading>\n                  <p>\n                    You need to\n                    <strong>Log in</strong>\n                    or\n                    <strong>Sign up</strong>\n                    first.\n                  </p>\n                </Alert>\n              </React.Fragment>\n            )}\n          </Col>\n        </Row>\n      </Jumbotron>\n    )\n  }\n}\n\nexport default BookmarksList\n","/* eslint-disable react/prop-types */\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react'\nimport { Alert, Button, Modal, InputGroup, FormControl } from 'react-bootstrap'\nimport { addBookmark } from 'services/bookmark'\n\nconst AlertError = (props) => (\n  <Alert variant='danger'>\n    <Alert.Heading>Something whent wrong</Alert.Heading>\n    <p>{props.errorMessage}</p>\n  </Alert>\n)\n\nconst InputGroupElement = (props) => {\n  return <InputGroup className='mb-3'>{props.children}</InputGroup>\n}\n\nconst InputGroupPrependElement = (props) => {\n  return (\n    <InputGroup.Prepend>\n      <InputGroup.Text>{props.groupText}</InputGroup.Text>\n    </InputGroup.Prepend>\n  )\n}\n\nconst FormControlElement = (props) => {\n  return (\n    <FormControl\n      name={props.name}\n      placeholder={props.placeholder}\n      as='input'\n      focus={props.focus.toString()}\n      aria-describedby={props.name}\n      onChange={props.onChange}\n    />\n  )\n}\n\nconst ButtonElement = (props) => {\n  return (\n    <Button type={props.type} variant={props.variant} onClick={props.onClick}>\n      {props.text}\n    </Button>\n  )\n}\n\nconst AddNewBookmark = (props) => {\n  const [ userLoggedIn, setUserLoggedIn ] = useState(props.userLoggedIn)\n  const [ title, setTitle ] = useState('')\n  const [ url, setUrl ] = useState('')\n  const [ tags, setTags ] = useState('')\n  const [ showModal, setShowModal ] = useState(false)\n  const [ saving, setSaving ] = useState(false)\n  let errorMessage = ''\n  const [ error, setError ] = useState(false)\n\n  const setState = (state, newValue) => {\n    switch (state) {\n      case 'title':\n        setTitle(newValue)\n        break\n      case 'url':\n        setUrl(newValue)\n        break\n      case 'tags':\n        setTags(newValue.toLowerCase())\n        break\n      default:\n        break\n    }\n  }\n\n  const handleCancel = () => {\n    setError(false)\n    setShowModal(false)\n  }\n\n  const handleSave = () => {\n    setSaving(true)\n    const arrayOfTags = tags.split(',').filter((tag) => tag.trim())\n    addBookmark(title, url, arrayOfTags)\n      .then((bookmark) => {\n        setSaving(false)\n        setShowModal(false)\n        props.saveUrl({ newBookmark: bookmark })\n      })\n      .catch((error) => {\n        errorMessage = error.message\n        setShowModal(true)\n        setSaving(false)\n        setError(true)\n      })\n  }\n\n  const handleChange = (event) => {\n    const { name, value } = event.target\n    setState(name, value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    setShowModal(false)\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <ButtonElement\n        type='button'\n        variant='outline-secondary'\n        onClick={() => setShowModal(true)}\n        text='Add'\n      />\n      <Modal centered show={showModal} autoFocus onHide={() => setShowModal(false)}>\n        <Modal.Header>\n          <Modal.Title>Add new bookmark</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <InputGroupElement>\n            <InputGroupPrependElement groupText='www' />\n            <FormControlElement\n              name='url'\n              placeholder='www.example.com'\n              focus\n              onChange={handleChange}\n            />\n          </InputGroupElement>\n          <label htmlFor='url'>Separate tags by , </label>\n          <InputGroupElement>\n            <InputGroupPrependElement groupText='Tags' />\n            <FormControlElement\n              name='tags'\n              placeholder='tag1, tag2,'\n              focus='false'\n              onChange={handleChange}\n            />\n            <InputGroupPrependElement groupText='Title' />\n            <FormControlElement\n              name='title'\n              placeholder='Title'\n              focus='false'\n              onChange={handleChange}\n            />\n          </InputGroupElement>\n        </Modal.Body>\n        <Modal.Footer>\n          <ButtonElement type='submit' variant='danger' onClick={handleCancel} text='Cancel' />\n          <ButtonElement\n            type='submit'\n            variant='success'\n            onClick={handleSave}\n            text={saving ? 'Saving...' : 'Save'}\n          />\n        </Modal.Footer>\n        {error && <AlertError errorMessage={errorMessage} />}\n      </Modal>\n    </form>\n  )\n}\n\nexport default AddNewBookmark\n","import React, { useState } from 'react'\nimport { FormControl } from 'react-bootstrap'\n\nconst SearchBookmarks = (props) => {\n  const [ input, setInput ] = useState('')\n\n  const handleChange = (event) => {\n    const { value } = event.target\n    props.filterBookmarks(value)\n    setInput({ input: value })\n  }\n\n  return (\n    <FormControl\n      hidden\n      placeholder={props.placeholder}\n      onChange={handleChange}\n      value={input}\n      className='mr-sm-2'\n    />\n  )\n}\n\nexport default SearchBookmarks\n","/* eslint-disable react/no-did-update-set-state */\n/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\n\n// import { logout } from 'services/auth'\nimport { logout } from '../services/auth'\nimport AddNewBookmark from './Bookmarks/Add'\nimport SearchBookmarks from './Bookmarks/Search'\n\nclass AppNavbar extends Component {\n  state = {\n    userLoggedIn: this.props.userLoggedIn\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.userLoggedIn !== prevProps.userLoggedIn) {\n      this.setState({\n        userLoggedIn: this.props.userLoggedIn\n      })\n    }\n  }\n\n  handleLogout = () => {\n    logout().then(() => {\n      this.setState({ userLoggedIn: null })\n      this.props.setUser(null)\n    })\n  }\n\n  render() {\n    return (\n      <Navbar sticky='top' variant='dark' bg='dark' expand='lg'>\n        <Navbar.Brand>\n          {/* TODO: Move style to css file */}\n          <Link to='/bookmarks' style={{ textDecoration: 'none', color: '#9A9DA0' }}>\n            Bookmarks\n          </Link>\n        </Navbar.Brand>\n        <Navbar>\n          {this.state.userLoggedIn && (\n            <AddNewBookmark saveUrl={this.props.saveUrl} userLoggedIn={this.state.userLoggedIn} />\n          )}\n        </Navbar>\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\n        <Navbar.Collapse className='justify-content-end' id='basic-navbar-nav'>\n          <Nav hidden={!this.state.userLoggedIn} className='justify-content-center'>\n            <Nav.Item>\n              <Form inline>\n                <SearchBookmarks placeholder='Search...' />\n              </Form>\n            </Nav.Item>\n          </Nav>\n          <Nav className='justify-content-end'>\n            {this.state.userLoggedIn ? (\n              <React.Fragment>\n                <Nav.Item>\n                  <Nav.Link\n                    variant='outline-info'\n                    as='a'\n                    href='/'\n                    onClick={this.handleLogout}\n                    style={{ textDecoration: 'none', color: '#9A9DA0' }}\n                  >\n                    Log out\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link\n                    variant='outline-info'\n                    as='a'\n                    href='/Settings'\n                    disabled\n                    style={{ textDecoration: 'none', color: '#9A9DA0' }}\n                  >\n                    Settings\n                  </Nav.Link>\n                </Nav.Item>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                <Nav.Item>\n                  <Nav.Link\n                    variant='outline-linfo'\n                    as='a'\n                    href='/login'\n                    style={{ textDecoration: 'none', color: '#9A9DA0' }}\n                  >\n                    Log in\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link\n                    variant='outline-info'\n                    as='a'\n                    href='/sign-up'\n                    style={{ textDecoration: 'none', color: '#9A9DA0' }}\n                  >\n                    Sign up\n                  </Nav.Link>\n                </Nav.Item>\n              </React.Fragment>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    )\n  }\n}\n\nexport default AppNavbar\n","/* eslint-disable react/jsx-boolean-value */\n/* eslint-disable react/no-unused-state */\nimport React, { useEffect, useState } from 'react'\nimport { Router, Switch, Route } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\n\nimport SignUp from './components/Auth/SignUp'\nimport { Login } from './components/Auth/Login'\nimport { loggedIn } from './services/auth'\nimport Home from './components/Home'\nimport BookmarksList from './components/Bookmarks/BookmarksList'\nimport AppNavbar from './components/AppNavbar'\n\nimport './App.css'\n\nconst browserHistory = createBrowserHistory()\n\nconst App = () => {\n  const [ loggedInUser, setLoggedInUser ] = useState(null)\n\n  useEffect(\n    () => {\n      if (!loggedInUser) {\n        loggedIn().then((user) => {\n          setLoggedInUser(user)\n        })\n      }\n    },\n    [ loggedInUser ]\n  )\n\n  const setUser = (user) => setLoggedInUser(user)\n\n  // update the list of bookmarks after a new bookmark is successfully added to the database\n  // So far, I don't need to manage bookmark state itself\n  const [ , setBookmark ] = useState(null)\n  const saveNewBookmark = (newBookmark) => {\n    setBookmark(newBookmark)\n  }\n\n  return (\n    <div className='App'>\n      <Router history={browserHistory}>\n        <AppNavbar saveUrl={saveNewBookmark} setUser={setUser} userLoggedIn={loggedInUser} />\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route\n            exact\n            path='/sign-up'\n            render={(props) => <SignUp {...props} setUser={setUser} />}\n          />\n          <Route exact path='/login' render={(props) => <Login {...props} setUser={setUser} />} />\n          <Route\n            exact\n            path='/bookmarks'\n            render={(props) => <BookmarksList {...props} userLoggedIn={loggedInUser} />}\n          />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}