{"version":3,"sources":["services/auth.js","components/AppNavbar.jsx","services/bookmark.js","components/AppBottomBar.jsx","components/Auth/SignUp.jsx","components/Auth/Login.jsx","components/Bookmarks/BookmarksList.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["service","axios","create","baseURL","process","withCredentials","signup","name","email","password","post","then","response","data","catch","err","login","Promise","reject","concat","logout","loggedIn","get","AppNavbar","state","userLoggedIn","_this","props","handleLogout","setState","setUser","prevProps","this","react_default","a","createElement","Navbar_default","sticky","variant","bg","expand","Brand","react_router_dom","to","style","textDecoration","color","Toggle","aria-controls","Collapse","id","Nav_default","className","hidden","Item","Form_default","inline","FormControl_default","type","disabled","placeholder","Fragment","Link","onClick","Component","addBookmark","title","url","console","log","bookmark","error","AppBottomBar","bookmarkURL","handleChange","event","_event$target","target","value","Object","defineProperty","handleSubmit","preventDefault","res","fixed","OverlayTrigger_default","placement","overlay","Tooltip_default","onSubmit","onChange","SignUp","_this$state","user","history","push","display","Group","as","Row","controlId","Col_default","Control","size","Button_default","Login","BookmarksList","bookmarksList","getBookmarks","e","prevState","ListGroup_default","map","lnk","idx","key","href","Alert_default","Heading","browserHistory","createBrowserHistory","App","getUser","_this2","react_router","components_AppNavbar","exact","path","render","Auth_SignUp","assign","Auth_Login","Bookmarks_BookmarksList","components_AppBottomBar","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7259eda5.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst service = axios.create({\n  baseURL: process.env.REACT_APP_SERVER_API_URL,\n  withCredentials: true,\n})\n\nconst signup = (name, email, password) => {\n  return service\n    .post('/auth/signup', { name, email, password })\n    .then((response) => {\n      return response.data\n    })\n    .catch((err) => err)\n}\n\nconst login = (email, password) => {\n  return service\n    .post('/auth/login', { email, password })\n    .then((response) => {\n      return response.data\n    })\n    .catch((err) => {\n      return Promise.reject(`${err}`)\n    })\n}\n\nconst logout = () => {\n  return service.post('/auth/logout').then((response) => response.data).catch((err) => err)\n}\n\nconst loggedIn = () => {\n  return service.get('/auth/loggedin').then((response) => response.data)\n}\n\nexport { signup, login, logout, loggedIn }\n","/* eslint-disable react/no-did-update-set-state */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\n\nimport { logout } from '../services/auth'\n\nclass AppNavbar extends Component {\n  state = {\n    userLoggedIn: this.props.userLoggedIn,\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.userLoggedIn !== prevProps.userLoggedIn) {\n      this.setState({\n        userLoggedIn: this.props.userLoggedIn,\n      })\n    }\n  }\n\n  handleLogout = () => {\n    logout().then(() => {\n      this.setState({ userLoggedIn: null })\n      this.props.setUser(null)\n    })\n  }\n\n  render() {\n    return (\n      <Navbar sticky='top' variant='dark' bg='dark' expand='lg'>\n        <Navbar.Brand>\n          {/* TODO: Move style to css file */}\n          <Link to='/bookmarks' style={{ textDecoration: 'none', color: '#9A9DA0' }}>\n            Bookmarks\n          </Link>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\n        <Navbar.Collapse id='basic-navbar-nav'>\n          <Nav className='justify-content-start mr-auto'>\n            {/* Disable dropdown menus for now, I'll back to it later */}\n            {/* <NavDropdown hidden={!this.state.userLoggedIn} title='Add' id='basic-nav-dropdown'>\n              <NavDropdown.Item href='#'>New link</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href='#'>New tag</NavDropdown.Item>\n            </NavDropdown> */}\n          </Nav>\n          <Nav hidden={!this.state.userLoggedIn} className='justify-content-center'>\n            <Nav.Item>\n              <Form inline>\n                <FormControl type='text' disabled placeholder='Search...' className='mr-sm-2' />\n              </Form>\n            </Nav.Item>\n          </Nav>\n          <Nav className='justify-content-end'>\n            {this.state.userLoggedIn ? (\n              <React.Fragment>\n                <Nav.Item>\n                  <Nav.Link variant='outline-info'>\n                    {/* TODO: Move style to css file */}\n                    <Link\n                      variant='outline-info'\n                      to='/'\n                      onClick={this.handleLogout}\n                      style={{ textDecoration: 'none', color: '#9A9DA0' }}>\n                      Log out\n                    </Link>\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link variant='outline-info'>\n                    {/* TODO: Move style to css file */}\n                    <Link to='/Settings' disabled style={{ textDecoration: 'none', color: '#9A9DA0' }}>\n                      Settings\n                    </Link>\n                  </Nav.Link>\n                </Nav.Item>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                <Nav.Item>\n                  <Nav.Link variant='outline-linfo'>\n                    {/* TODO: Move style to css file */}\n                    <Link to='/login' style={{ textDecoration: 'none', color: '#9A9DA0' }}>\n                      Log in\n                    </Link>\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link variant='outline-info'>\n                    {/* TODO: Move style to css file */}\n                    <Link to='/sign-up' style={{ textDecoration: 'none', color: '#9A9DA0' }}>\n                      Sign up\n                    </Link>\n                  </Nav.Link>\n                </Nav.Item>\n              </React.Fragment>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    )\n  }\n}\n\nexport default AppNavbar\n","import axios from 'axios'\n\nconst service = axios.create({\n  baseURL: process.env.REACT_APP_SERVER_API_URL,\n  withCredentials: true,\n})\n\nconst addBookmark = (title, url) => {\n  console.log('===>', process.env.REACT_APP_SERVER_API_URL)\n  console.log('url ==> ', url)\n  service\n    .get(`/bookmark/scrape/${url}`)\n    .then((data) => {\n      console.log('here ===>', data)\n    })\n    .catch((err) => console.log('ERR: =>', err))\n  return service.post('/bookmark', { title, url }).then((bookmark) => bookmark).catch((error) => error)\n}\n\nconst bookmarks = () => {\n  return service.get('/bookmark').then((bookmarks) => bookmarks).catch((error) => error)\n}\n\nconst getBookmarkById = (_id) => {\n  service.get(`/bookmark/:${_id}`).then((bookmark) => bookmark).catch((error) => error)\n}\n\nconst editBookmark = (_id, title, url) => {\n  service.put(`/bookmark/:${_id}`, { title, url }).then((bookmark) => bookmark).catch((error) => error)\n}\n\nconst deleteBookmark = (_id) => {\n  service.delete(`/bookmark/:${_id}`).then((response) => response.data).catch((error) => error)\n}\n\nexport { addBookmark, bookmarks, getBookmarkById, editBookmark, deleteBookmark }\n","/* eslint-disable react/no-did-update-set-state */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Form from 'react-bootstrap/Form'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Tooltip from 'react-bootstrap/Tooltip'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport { addBookmark } from '../services/bookmark'\n\nclass AppBottomBar extends Component {\n  state = {\n    bookmarkURL: '',\n    userLoggedIn: this.props.userLoggedIn,\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.userLoggedIn !== prevProps.userLoggedIn) {\n      this.setState({\n        userLoggedIn: this.props.userLoggedIn,\n      })\n    }\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target\n    this.setState({\n      [name]: value,\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    // const { bookmarkURL, userLoggedIn } = this.state\n\n    const { bookmarkURL } = this.state\n\n    addBookmark('', bookmarkURL).then((res) => res).catch((error) => error)\n    this.setState({\n      bookmarkURL: '',\n    })\n  }\n\n  render() {\n    return (\n      <Navbar hidden={!this.state.userLoggedIn} fixed='bottom' variant='dark' bg='dark' expand='lg'>\n        <Navbar.Collapse>\n          <Nav className='justify-content-center'>\n            <Nav.Item>\n              <OverlayTrigger\n                placement='top'\n                overlay={<Tooltip id='addNewBookmark'> Add new bookmark </Tooltip>}\n              >\n                <Form inline onSubmit={this.handleSubmit}>\n                  <FormControl\n                    name='bookmarkURL'\n                    value={this.state.bookmarkURL}\n                    type='text'\n                    onChange={this.handleChange}\n                    placeholder='https://...'\n                    className='mr-sm-2'\n                  />\n                </Form>\n              </OverlayTrigger>\n            </Nav.Item>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    )\n  }\n}\n\nexport default AppBottomBar\n","/* eslint-disable react/prop-types */\nimport React, { Component } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport { signup } from '../../services/auth'\n\nimport '../../assets/auth/auth.css'\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    name: '',\n  }\n\n  onChange = (event) => {\n    const { name, value } = event.target\n    this.setState({\n      [name]: value,\n    })\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault()\n    const { name, email, password } = this.state\n    signup(name, email, password)\n      .then((user) => {\n        this.props.setUser(user)\n        this.props.history.push('/bookmarks')\n      })\n      .catch(() => {\n        // TODO: Handle .catch -> Display a  message to the user\n        this.props.setUser(null)\n      })\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <Form display='block' onSubmit={this.onSubmit}>\n          <Form.Group as={Row} controlId='formPlaintextPassword'>\n            <Col>\n              <Form.Control\n                size='lg'\n                type='text'\n                name='name'\n                value={this.state.name}\n                onChange={this.onChange}\n                placeholder='Enter your name'\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId='formPlaintextPassword'>\n            <Col>\n              <Form.Control\n                size='lg'\n                type='email'\n                name='email'\n                value={this.state.email}\n                onChange={this.onChange}\n                placeholder='example@email.com'\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId='formPlaintextPassword'>\n            <Col>\n              <Form.Control\n                size='lg'\n                type='password'\n                name='password'\n                id='password'\n                placeholder='Enter your password'\n                value={this.state.password}\n                onChange={this.onChange}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group>\n            <Button type='submit' variant='outline-primary'>\n              Login\n            </Button>\n          </Form.Group>\n        </Form>\n      </div>\n    )\n  }\n}\n\nexport default SignUp\n","/* eslint-disable react/prop-types */\nimport React, { Component } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport { login } from '../../services/auth'\n\nimport '../../assets/auth/auth.css'\n\nclass Login extends Component {\n  state = {\n    email: '',\n    password: '',\n  }\n\n  onChange = (event) => {\n    const { name, value } = event.target\n    this.setState({\n      [name]: value,\n    })\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault()\n    const { email, password } = this.state\n    login(email, password)\n      .then((user) => {\n        this.props.setUser(user)\n        this.props.history.push('/bookmarks')\n      })\n      .catch(() => {\n        // TODO: Handle .catch -> Display a  message to the user\n        this.props.setUser(null)\n      })\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <Form display='block' onSubmit={this.onSubmit}>\n          <Form.Group as={Row} controlId='formPlaintextEmail'>\n            <Col>\n              <Form.Control\n                size='lg'\n                type='email'\n                name='email'\n                id='email'\n                placeholder='example@email.com'\n                onChange={this.onChange}\n                value={this.state.email}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row} controlId='formPlaintextPassword'>\n            <Col>\n              <Form.Control\n                size='lg'\n                type='password'\n                name='password'\n                id='password'\n                placeholder='Enter your password'\n                onChange={this.onChange}\n                value={this.state.password}\n              />\n            </Col>\n          </Form.Group>\n          <Form.Group>\n            <Button type='submit' variant='outline-primary'>\n              Login\n            </Button>\n          </Form.Group>\n        </Form>\n      </div>\n    )\n  }\n}\n\nexport default Login\n","/* eslint-disable */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react'\nimport Alert from 'react-bootstrap/Alert'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport axios from 'axios'\n\nclass BookmarksList extends Component {\n  state = {\n    bookmarksList: [],\n    userLoggedIn: this.props.userLoggedIn,\n  }\n\n  componentDidMount() {\n    this.getBookmarks()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('prevProps', prevProps)\n    if (prevProps !== this.props) {\n      this.setState({ userLoggedIn: this.props.userLoggedIn })\n      this.getBookmarks()\n    }\n  }\n\n  getBookmarks = () => {\n    axios\n      .get(`${process.env.REACT_APP_SERVER_API_URL}/bookmark`, { withCredentials: true })\n      .then((response) => {\n        this.setState({\n          bookmarksList: response.data,\n        })\n      })\n      .catch((e) => console.log('** error **', e))\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.userLoggedIn ? (\n          <React.Fragment>\n            <ListGroup variant='flush'>\n              {this.state.bookmarksList.map((lnk, idx) => (\n                <ListGroup.Item key={idx} as='a' target='_blank' href={lnk.url}>\n                  {lnk.url}\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <Alert variant='danger'>\n              <Alert.Heading>Protected content</Alert.Heading>\n              <p>\n                You need to <strong>Log in</strong> or <strong>Sign up</strong> first.\n              </p>\n            </Alert>\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    )\n  }\n}\n\nexport default BookmarksList\n","/* eslint-disable react/jsx-boolean-value */\n/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react'\nimport { Router, Switch, Route } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\n\nimport AppNavbar from './components/AppNavbar'\nimport AppBottomBar from './components/AppBottomBar'\nimport SignUp from './components/Auth/SignUp'\nimport Login from './components/Auth/Login'\nimport { loggedIn } from './services/auth'\nimport BookmarksList from './components/Bookmarks/BookmarksList'\n// import ProtectedRoute from './components/ProtectRoute'\n\n// import './App.css'\n\nconst browserHistory = createBrowserHistory()\n\nclass App extends Component {\n  state = {\n    userLoggedIn: null,\n  }\n\n  componentDidMount() {\n    this.getUser()\n  }\n\n  setUser = (user) => {\n    this.setState({\n      userLoggedIn: user,\n    })\n  }\n\n  getUser = () => {\n    loggedIn().then((user) => {\n      this.setState({\n        userLoggedIn: user,\n      })\n    })\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <Router history={browserHistory}>\n          <AppNavbar setUser={this.setUser} userLoggedIn={this.state.userLoggedIn} />\n          <Switch>\n            <Route exact path='/sign-up' render={(props) => <SignUp {...props} setUser={this.setUser} />} />\n            <Route exact path='/login' render={(props) => <Login {...props} setUser={this.setUser} />} />\n            <Route\n              exact\n              path='/bookmarks'\n              render={(props) => <BookmarksList {...props} userLoggedIn={this.state.userLoggedIn} />}\n            />\n\n            {/* <ProtectedRoute\n              component={BookmarksList}\n              exact={true}\n              user={this.state.userLoggedIn}\n              path='/bookmarks'\n            /> */}\n          </Switch>\n          <AppBottomBar userLoggedIn={this.state.userLoggedIn} />\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n// import './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}