{"version":3,"sources":["services/bookmark.js","components/Bookmarks/Add.jsx","services/auth.js","components/AppNavbar.jsx","components/Auth/Login.jsx","components/Auth/SignUp.jsx","components/Bookmarks/BookmarksList.jsx","components/Home.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["service","axios","create","baseURL","process","withCredentials","InputGroupElement","props","react_default","a","createElement","InputGroup","className","children","InputGroupPrependElement","Prepend","Text","groupText","FormControlElement","es_FormControl","name","placeholder","as","focus","aria-describedby","onChange","ButtonElement","Button","type","variant","onClick","text","AddNewBookmark","_useState","useState","userLoggedIn","_useState2","Object","slicedToArray","_useState3","_useState4","title","setTitle","_useState5","_useState6","url","setUrl","_useState7","_useState8","tags","setTags","_useState9","_useState10","showModal","setShowModal","handleChange","event","_event$target","target","state","newValue","toLowerCase","setState","value","onSubmit","preventDefault","Add_ButtonElement","Modal","centered","show","autoFocus","onHide","Header","Title","Body","Add_InputGroupElement","Add_InputGroupPrependElement","Add_FormControlElement","htmlFor","Footer","arrayOfTags","split","map","tag","trim","post","then","response","data","catch","error","addBookmark","bookmark","saveUrl","newBookmark","alert","logout","Promise","reject","AppNavbar","_this","handleLogout","setUser","prevProps","this","Navbar_default","sticky","bg","expand","Brand","react_router_dom","to","style","textDecoration","color","Add","Toggle","aria-controls","Collapse","id","Nav_default","hidden","Item","Form_default","inline","FormControl_default","disabled","Fragment","Link","Component","useFormInput","initialValue","setValue","Login","email","password","loginError","setLoginError","errorMessage","setErrorMessage","display","request","status","login","user","history","push","Group","Row","controlId","Col_default","Alert_default","onClose","dismissible","Heading","Control","assign","size","required","Button_default","SignUp","signUpError","setSignUpError","signup","BookmarksList","bookmarksList","getBookmarks","get","concat","e","prevState","Jumbotron_default","height","ListGroup_default","lnk","idx","padding","marginTop","marginBottom","borderRadius","key","href","Home","browserHistory","createBrowserHistory","App","loggedInUser","setLoggedInUser","useEffect","setBookmark","react_router","components_AppNavbar","exact","path","component","render","Auth_SignUp","Login_Login","Bookmarks_BookmarksList","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.99e65276.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst service = axios.create({\n  baseURL: process.env.REACT_APP_SERVER_API_URL,\n  withCredentials: true\n})\n\nconst addBookmark = (title, url, tags) => {\n  return service\n    .post('/bookmark', { title, url, tags })\n    .then((response) => response.data)\n    .catch((error) => error)\n}\n\nconst bookmarks = () => {\n  return service.get('/bookmark').then((bookmarks) => bookmarks).catch((error) => error)\n}\n\nconst getBookmarkById = (_id) => {\n  service.get(`/bookmark/:${_id}`).then((bookmark) => bookmark).catch((error) => error)\n}\n\nconst editBookmark = (_id, title, url) => {\n  service.put(`/bookmark/:${_id}`, { title, url }).then((bookmark) => bookmark).catch((error) => error)\n}\n\nconst deleteBookmark = (_id) => {\n  service.delete(`/bookmark/:${_id}`).then((response) => response.data).catch((error) => error)\n}\n\nconst scrape = (anyURL) => {\n  return service\n    .post('/bookmark/scrape', { anyURL })\n    .then((res) => {\n      return res.data\n    })\n    .catch((e) => e)\n  //TODO: Handle the error above\n}\n\nexport { addBookmark, bookmarks, getBookmarkById, editBookmark, deleteBookmark, scrape }\n","/* eslint-disable react/prop-types */\n/* eslint-disable import/no-unresolved */\n/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react'\nimport axios from 'axios'\nimport { Button, Modal, InputGroup, FormControl } from 'react-bootstrap'\nimport { addBookmark } from 'services/bookmark'\n\nconst InputGroupElement = (props) => {\n  return <InputGroup className='mb-3'>{props.children}</InputGroup>\n}\n\nconst InputGroupPrependElement = (props) => {\n  return (\n    <InputGroup.Prepend>\n      <InputGroup.Text>{props.groupText}</InputGroup.Text>\n    </InputGroup.Prepend>\n  )\n}\n\nconst FormControlElement = (props) => {\n  return (\n    <FormControl\n      name={props.name}\n      placeholder={props.placeholder}\n      // id={props.name}\n      as='input'\n      focus={props.focus}\n      aria-describedby={props.name}\n      onChange={props.onChange}\n    />\n  )\n}\n\nconst ButtonElement = (props) => {\n  return (\n    <Button type={props.type} variant={props.variant} onClick={props.onClick}>\n      {props.text}\n    </Button>\n  )\n}\n\nconst AddNewBookmark = (props) => {\n  const [ userLoggedIn, setUserLoggedIn ] = useState(props.userLoggedIn)\n  const [ title, setTitle ] = useState('')\n  const [ url, setUrl ] = useState('')\n  const [ tags, setTags ] = useState('')\n  const [ showModal, setShowModal ] = useState(false)\n\n  const setState = (state, newValue) => {\n    switch (state) {\n      case 'title':\n        setTitle(newValue)\n        break\n      case 'url':\n        setUrl(newValue)\n        break\n      case 'tags':\n        setTags(newValue.toLowerCase())\n        break\n      default:\n        break\n    }\n  }\n\n  const handleSave = () => {\n    const arrayOfTags = tags.split(',').map((tag) => tag.trim())\n    addBookmark(title, url, arrayOfTags)\n      .then((bookmark) => {\n        props.saveUrl({ newBookmark: bookmark })\n        setShowModal(false)\n      })\n      .catch((error) => {\n        alert(error)\n        setShowModal(true)\n      })\n  }\n\n  const handleChange = (event) => {\n    const { name, value } = event.target\n    setState(name, value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    setShowModal(false)\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <ButtonElement\n        type='button'\n        variant='outline-secondary'\n        onClick={() => setShowModal(true)}\n        text='Add'\n      />\n      <Modal centered show={showModal} autoFocus onHide={() => setShowModal(false)}>\n        <Modal.Header>\n          <Modal.Title>Add new bookmark</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <InputGroupElement>\n            <InputGroupPrependElement groupText='www' />\n            <FormControlElement name='url' placeholder='www.example.com' focus onChange={handleChange} />\n          </InputGroupElement>\n          <label htmlFor='url'>Separate tags by , </label>\n          <InputGroupElement>\n            <InputGroupPrependElement groupText='Tags' />\n            <FormControlElement name='tags' placeholder='tag1, tag2,' focus={false} onChange={handleChange} />\n            <InputGroupPrependElement groupText='Title' />\n            <FormControlElement name='title' placeholder='Title' focus={false} onChange={handleChange} />\n          </InputGroupElement>\n        </Modal.Body>\n        <Modal.Footer>\n          <ButtonElement type='submit' variant='danger' onClick={() => setShowModal(false)} text='Cancel' />\n          <ButtonElement type='submit' variant='success' onClick={handleSave} text='Save' />\n        </Modal.Footer>\n      </Modal>\n    </form>\n  )\n}\n\nexport default AddNewBookmark\n","import axios from 'axios'\n\nconst service = axios.create({\n  baseURL: process.env.REACT_APP_SERVER_API_URL,\n  withCredentials: true\n})\n\nconst signup = (name, email, password) => {\n  return service\n    .post('/auth/signup', { name, email, password })\n    .then((response) => {\n      return response.data\n    })\n    .catch((error) => {\n      return Promise.reject(error.request.status)\n    })\n}\n\nconst login = (email, password) => {\n  return service\n    .post('/auth/login', { email, password })\n    .then((response) => {\n      return response.data\n    })\n    .catch((error) => {\n      return Promise.reject(error.request.status)\n    })\n}\n\n// TODO: Return a rejected Promise in the catch\nconst logout = () => {\n  return service\n    .post('/auth/logout')\n    .then((response) => response.data)\n    .catch((error) => Promise.reject(error))\n}\n\nconst loggedIn = () => {\n  return service.get('/auth/loggedin').then((response) => response.data)\n}\n\nexport { signup, login, logout, loggedIn }\n","/* eslint-disable react/no-did-update-set-state */\n/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\n\nimport AddNewBookmark from './Bookmarks/Add'\nimport { logout } from '../services/auth'\n\nclass AppNavbar extends Component {\n  state = {\n    userLoggedIn: this.props.userLoggedIn\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.userLoggedIn !== prevProps.userLoggedIn) {\n      this.setState({\n        userLoggedIn: this.props.userLoggedIn\n      })\n    }\n  }\n\n  handleLogout = () => {\n    logout().then(() => {\n      this.setState({ userLoggedIn: null })\n      this.props.setUser(null)\n    })\n  }\n\n  render() {\n    return (\n      <Navbar sticky='top' variant='dark' bg='dark' expand='lg'>\n        <Navbar.Brand>\n          {/* TODO: Move style to css file */}\n          <Link to='/bookmarks' style={{ textDecoration: 'none', color: '#9A9DA0' }}>\n            Bookmarks\n          </Link>\n        </Navbar.Brand>\n        <Navbar>\n          {this.state.userLoggedIn && (\n            <AddNewBookmark saveUrl={this.props.saveUrl} userLoggedIn={this.state.userLoggedIn} />\n          )}\n        </Navbar>\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\n        <Navbar.Collapse className='justify-content-end' id='basic-navbar-nav'>\n          <Nav hidden={!this.state.userLoggedIn} className='justify-content-center'>\n            <Nav.Item>\n              <Form inline>\n                <FormControl type='text' disabled placeholder='Search...' className='mr-sm-2' />\n              </Form>\n            </Nav.Item>\n          </Nav>\n          <Nav className='justify-content-end'>\n            {this.state.userLoggedIn ? (\n              <React.Fragment>\n                <Nav.Item>\n                  <Nav.Link variant='outline-info'>\n                    {/* TODO: Move style to css file */}\n                    <Link\n                      variant='outline-info'\n                      to='/'\n                      onClick={this.handleLogout}\n                      style={{ textDecoration: 'none', color: '#9A9DA0' }}\n                    >\n                      Log out\n                    </Link>\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link variant='outline-info'>\n                    {/* TODO: Move style to css file */}\n                    <Link to='/Settings' disabled style={{ textDecoration: 'none', color: '#9A9DA0' }}>\n                      Settings\n                    </Link>\n                  </Nav.Link>\n                </Nav.Item>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                <Nav.Item>\n                  <Nav.Link variant='outline-linfo'>\n                    {/* TODO: Move style to css file */}\n                    <Link to='/login' style={{ textDecoration: 'none', color: '#9A9DA0' }}>\n                      Log in\n                    </Link>\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link variant='outline-info'>\n                    {/* TODO: Move style to css file */}\n                    <Link to='/sign-up' style={{ textDecoration: 'none', color: '#9A9DA0' }}>\n                      Sign up\n                    </Link>\n                  </Nav.Link>\n                </Nav.Item>\n              </React.Fragment>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    )\n  }\n}\n\nexport default AppNavbar\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react'\nimport Alert from 'react-bootstrap/Alert'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\n\nimport { login } from '../../services/auth'\n\nimport '../../assets/auth/auth.css'\n\n// TODO: Move this to a proper file\nconst useFormInput = (initialValue) => {\n  const [ value, setValue ] = useState(initialValue)\n\n  const handleChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  return {\n    value,\n    onChange: handleChange\n  }\n}\n\nconst Login = (props) => {\n  const email = useFormInput('')\n  const password = useFormInput('')\n  const [ loginError, setLoginError ] = useState(false)\n  const [ errorMessage, setErrorMessage ] = useState('')\n\n  const onSubmit = (event) => {\n    event.preventDefault()\n    setLoginError(false)\n    login(email.value, password.value)\n      .then((user) => {\n        props.setUser(user)\n        props.history.push('/bookmarks')\n      })\n      .catch((error) => {\n        setLoginError(true)\n        switch (error) {\n          case 0:\n            // setErrorMessage('Could not connect to server, try again later. 🙁')\n            setErrorMessage('Could not connect to server 🙁')\n            break\n          case 401:\n            setErrorMessage('Incorrect username or password.')\n            break\n          default:\n            setErrorMessage('Something went wrong... 😩')\n            break\n        }\n        props.setUser(null)\n      })\n  }\n\n  const handleDismiss = (show) => setLoginError(show)\n\n  return (\n    <div className='container'>\n      <Form display='block' onSubmit={onSubmit}>\n        <Form.Group as={Row} controlId='errorMessage'>\n          <Col>\n            {loginError ? (\n              <Alert variant='danger' onClose={handleDismiss} dismissible>\n                <Alert.Heading>You got an error</Alert.Heading>\n                <p>{errorMessage}</p>\n              </Alert>\n            ) : (\n              <React.Fragment />\n            )}\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formPlaintextEmail'>\n          <Col>\n            <Form.Control\n              size='lg'\n              type='email'\n              name='email'\n              placeholder='example@email.com'\n              {...email}\n              required\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formPlaintextPassword'>\n          <Col>\n            <Form.Control\n              size='lg'\n              type='password'\n              name='password'\n              placeholder='Enter your password'\n              {...password}\n              required\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group>\n          <Button type='submit' variant='outline-primary'>\n            Login\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n\nexport { useFormInput, Login }\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react'\nimport Alert from 'react-bootstrap/Alert'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport { signup } from '../../services/auth'\nimport { useFormInput } from './Login'\n\nimport '../../assets/auth/auth.css'\n\nconst SignUp = (props) => {\n  const name = useFormInput('')\n  const email = useFormInput('')\n  const password = useFormInput('')\n  const [ signUpError, setSignUpError ] = useState(false)\n  const [ errorMessage, setErrorMessage ] = useState('')\n\n  const onSubmit = (event) => {\n    event.preventDefault()\n    signup(name.value, email.value, password.value)\n      .then((user) => {\n        props.setUser(user)\n        props.history.push('/bookmarks')\n      })\n      .catch((error) => {\n        props.setUser(null)\n        setSignUpError(true)\n        switch (error) {\n          case 0:\n            setErrorMessage('Could not connect to server 🙁')\n            break\n          case 409:\n            setErrorMessage('The email already exists')\n            break\n          default:\n            setErrorMessage('Something went wrong... 😩')\n            break\n        }\n      })\n  }\n\n  const handleDismiss = (show) => setSignUpError(show)\n\n  return (\n    <div className='container'>\n      <Form display='block' onSubmit={onSubmit}>\n        <Form.Group as={Row} controlId='errorMessage'>\n          <Col>\n            {signUpError && (\n              <Alert variant='danger' onClose={handleDismiss} dismissible>\n                <Alert.Heading>You got an error </Alert.Heading>\n                <p>{errorMessage}</p>\n              </Alert>\n            )}\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formPlaintextPassword'>\n          <Col>\n            <Form.Control\n              size='lg'\n              type='text'\n              name='name'\n              placeholder='Enter your name'\n              {...name}\n              required\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formPlaintextPassword'>\n          <Col>\n            <Form.Control\n              size='lg'\n              type='email'\n              name='email'\n              placeholder='example@email.com'\n              {...email}\n              required\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formPlaintextPassword'>\n          <Col>\n            <Form.Control\n              size='lg'\n              type='password'\n              name='password'\n              placeholder='Enter your password'\n              required\n              {...password}\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group>\n          <Button type='submit' variant='outline-primary'>\n            Sign up\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n\nexport default SignUp\n","/* eslint-disable */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react'\nimport Alert from 'react-bootstrap/Alert'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport axios from 'axios'\n\nclass BookmarksList extends Component {\n  state = {\n    bookmarksList: [],\n    userLoggedIn: this.props.userLoggedIn,\n  }\n\n  componentDidMount() {\n    this.getBookmarks()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      this.setState({ userLoggedIn: this.props.userLoggedIn })\n      this.getBookmarks()\n    }\n  }\n\n  getBookmarks = () => {\n    axios\n      .get(`${process.env.REACT_APP_SERVER_API_URL}/bookmark`, { withCredentials: true })\n      .then((response) => {\n        this.setState({\n          bookmarksList: response.data,\n        })\n      })\n      .catch((e) => e)\n  }\n\n  render() {\n    return (\n      <Jumbotron style={{ height: '100vh' }}>\n        {this.state.userLoggedIn ? (\n          <React.Fragment>\n            <ListGroup variant='flush'>\n              {this.state.bookmarksList.map((lnk, idx) => (\n                // TODO: Move the styling to a proper css file\n                <ListGroup.Item\n                  style={{\n                    padding: '25px',\n                    marginTop: '2px',\n                    marginBottom: '5px',\n                    borderRadius: '10px 10px 10px 10px',\n                  }}\n                  key={idx}\n                  as='a'\n                  target='_blank'\n                  href={lnk.url}>\n                  {lnk.title} - {lnk.url}\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <Alert variant='danger'>\n              <Alert.Heading>Protected content</Alert.Heading>\n              <p>\n                You need to <strong>Log in</strong> or <strong>Sign up</strong> first.\n              </p>\n            </Alert>\n          </React.Fragment>\n        )}\n      </Jumbotron>\n    )\n  }\n}\n\nexport default BookmarksList\n","import React from 'react'\n\nimport '../assets/Home.css'\n\nconst Home = () => {\n  return (\n    <div className='container left-box'>\n      <div className='row'>\n        <div className='col-md-8'>\n          <span className='anim-left'> A place where your bookmarks</span>\n          <span className='anim-bottom'> can call Home.</span>\n        </div>\n        {/* <div className='col-lg-6' /> */}\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","/* eslint-disable react/jsx-boolean-value */\n/* eslint-disable react/no-unused-state */\nimport React, { useEffect, useState } from 'react'\nimport { Router, Switch, Route } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\n\nimport AppNavbar from './components/AppNavbar'\nimport SignUp from './components/Auth/SignUp'\nimport { Login } from './components/Auth/Login'\nimport { loggedIn } from './services/auth'\nimport BookmarksList from './components/Bookmarks/BookmarksList'\nimport Home from './components/Home'\n\nimport './App.css'\n\nconst browserHistory = createBrowserHistory()\n\nconst App = () => {\n  const [ loggedInUser, setLoggedInUser ] = useState(null)\n\n  useEffect(\n    () => {\n      if (!loggedInUser) {\n        loggedIn().then((user) => {\n          setLoggedInUser(user)\n        })\n      }\n    },\n    [ loggedInUser ]\n  )\n\n  const setUser = (user) => setLoggedInUser(user)\n\n  // update the list of bookmarks after a new bookmark is successfully added to the database\n  // So far, I don't need to manage bookmark state itself\n  const [ , setBookmark ] = useState(null)\n  const saveNewBookmark = (newBookmark) => {\n    setBookmark(newBookmark)\n  }\n\n  return (\n    <div className='App'>\n      <Router history={browserHistory}>\n        <AppNavbar saveUrl={saveNewBookmark} setUser={setUser} userLoggedIn={loggedInUser} />\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/sign-up' render={(props) => <SignUp {...props} setUser={setUser} />} />\n          <Route exact path='/login' render={(props) => <Login {...props} setUser={setUser} />} />\n          <Route\n            exact\n            path='/bookmarks'\n            render={(props) => <BookmarksList {...props} userLoggedIn={loggedInUser} />}\n          />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}