{"version":3,"sources":["services/auth.js","components/Auth/Login.jsx","components/Auth/SignUp.jsx","components/Home.jsx","components/Tags/TagsList.jsx","services/bookmark.js","services/tags.js","components/Bookmarks/Card.jsx","components/Bookmarks/AlertError.jsx","components/Bookmarks/InputGroupElement.jsx","components/Bookmarks/InputGroupPrependElement.jsx","components/Bookmarks/FormControlElement.jsx","components/Bookmarks/ButtonElement.jsx","components/Bookmarks/Add.jsx","components/Bookmarks/BookmarksList.jsx","components/Bookmarks/Search.jsx","components/AppNavbar.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["service","axios","create","baseURL","process","withCredentials","logout","post","then","response","data","catch","error","Promise","reject","useFormInput","initialValue","_useState","useState","_useState2","Object","slicedToArray","value","setValue","onChange","event","target","Login","props","email","password","_useState3","_useState4","loginError","setLoginError","_useState5","_useState6","errorMessage","setErrorMessage","react_default","a","createElement","className","Form_default","display","onSubmit","preventDefault","request","status","login","user","setUser","history","push","Group","as","Row","controlId","Col_default","Alert_default","variant","onClose","show","dismissible","Heading","Fragment","Control","assign","size","type","name","placeholder","required","Button_default","SignUp","signUpError","setSignUpError","signup","Home","TagsList","bookmarks","activeTags","tagIds","Set","tagNames","length","map","bookmark","_tags","forEach","tag","add","_id","ids","toConsumableArray","tagsList","tagName","idx","ListGroup","Item","style","padding","marginTop","marginBottom","backgroundColor","action","onClick","tagId","classList","contains","indexOfTag","indexOf","splice","handleTagClick","toggle","handleClick","key","get","editBookmark","_ref","asyncToGenerator","regenerator_default","mark","_callee","title","url","tags","wrap","_context","prev","next","put","concat","abrupt","sent","t0","stop","_x","_x2","_x3","_x4","apply","this","arguments","deleteBookmark","_ref2","_callee2","_context2","delete","_x5","deleteTag","BookmarkCard","handleDeleteBookmark","handleEditBookmark","persist","innerText","CardColumns","index","Card","border","width","Body","Title","Text","Footer","ButtonToolbar","ButtonGroup","es_Button","evt","AlertError","es_Alert","InputGroupElement","InputGroup","children","InputGroupPrependElement","Prepend","groupText","FormControlElement","bookmarkTitle","bookmarkUrl","bookmarkTags","state","setState","FormControl","focus","toString","aria-describedby","_event$target","ButtonElement","text","AddNewBookmark","editing","setTitle","setUrl","reduce","val","setTags","_useState7","showModal","_useState8","setShowModal","_useState9","_useState10","saving","setSaving","_useState11","_useState12","_useState13","_useState14","setError","handleChange","newValue","toLowerCase","Bookmarks_ButtonElement","Modal","centered","autoFocus","onHide","Header","modalTitle","Bookmarks_InputGroupElement","Bookmarks_InputGroupPrependElement","Bookmarks_FormControlElement","htmlFor","hideModal","trim","arrayOfTags","split","filter","editedBookmark","saveUrl","newBookmark","alert","addBookmark","message","Bookmarks_AlertError","EditBookmarkModal","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","el","document","getElementById","appendChild","removeChild","ReactDOM","createPortal","Component","BookmarksList","bookmarksList","filteredBookmarks","userLoggedIn","_this2","showEditBookmarkModal","getBookmarks","getBookmarksByTag","find","assertThisInitialized","_filteredBookmarks","includes","prevState","prevProps","BookmarksList_EditBookmarkModal","Add_AddNewBookmark","Jumbotron","height","paddingTop","es_Row","es_Col","xs","Tags_TagsList","Bookmarks_Card","SearchBookmarks","input","setInput","hidden","filterBookmarks","AppNavbar","handleLogout","Navbar_default","fixed","bg","expand","Brand","react_router_dom","to","textDecoration","color","Toggle","aria-controls","Collapse","id","Nav_default","inline","Search","Link","href","disabled","browserHistory","createBrowserHistory","App","loggedInUser","setLoggedInUser","useEffect","setBookmark","saveNewBookmark","react_router","components_AppNavbar","exact","path","component","render","Auth_SignUp","Login_Login","Bookmarks_BookmarksList","Boolean","window","location","hostname","match","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6614f89d.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst service = axios.create({\n  baseURL: process.env.REACT_APP_SERVER_API_URL,\n  withCredentials: true\n})\n\nconst signup = (name, email, password) => {\n  return service\n    .post('/auth/signup', { name, email, password })\n    .then((response) => {\n      return response.data\n    })\n    .catch((error) => {\n      return Promise.reject(error.request.status)\n    })\n}\n\nconst login = (email, password) => {\n  return service\n    .post('/auth/login', { email, password })\n    .then((response) => {\n      return response.data\n    })\n    .catch((error) => {\n      return Promise.reject(error.request.status)\n    })\n}\n\n// TODO: Return a rejected Promise in the catch\nconst logout = () => {\n  return service\n    .post('/auth/logout')\n    .then((response) => response.data)\n    .catch((error) => Promise.reject(error))\n}\n\nconst loggedIn = () => {\n  return service.get('/auth/loggedin').then((response) => response.data)\n}\n\nexport { signup, login, logout, loggedIn }\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react'\nimport Alert from 'react-bootstrap/Alert'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\n\nimport { login } from '../../services/auth'\n\nimport '../../assets/auth/auth.css'\n\n// TODO: Move this to a proper file\nconst useFormInput = (initialValue) => {\n  const [ value, setValue ] = useState(initialValue)\n\n  const handleChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  return {\n    value,\n    onChange: handleChange\n  }\n}\n\nconst Login = (props) => {\n  const email = useFormInput('')\n  const password = useFormInput('')\n  const [ loginError, setLoginError ] = useState(false)\n  const [ errorMessage, setErrorMessage ] = useState('')\n\n  const onSubmit = (event) => {\n    event.preventDefault()\n    setLoginError(false)\n    login(email.value, password.value)\n      .then((user) => {\n        props.setUser(user)\n        props.history.push('/bookmarks')\n      })\n      .catch((error) => {\n        setLoginError(true)\n        switch (error) {\n          case 0:\n            // setErrorMessage('Could not connect to server, try again later. 🙁')\n            setErrorMessage('Could not connect to server 🙁')\n            break\n          case 401:\n            setErrorMessage('Incorrect username or password.')\n            break\n          default:\n            setErrorMessage('Something went wrong... 😩')\n            break\n        }\n        props.setUser(null)\n      })\n  }\n\n  const handleDismiss = (show) => setLoginError(show)\n\n  return (\n    <div className='container'>\n      <Form display='block' onSubmit={onSubmit}>\n        <Form.Group as={Row} controlId='errorMessage'>\n          <Col>\n            {loginError ? (\n              <Alert variant='danger' onClose={handleDismiss} dismissible>\n                <Alert.Heading>You got an error</Alert.Heading>\n                <p>{errorMessage}</p>\n              </Alert>\n            ) : (\n              <React.Fragment />\n            )}\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formPlaintextEmail'>\n          <Col>\n            <Form.Control\n              size='lg'\n              type='email'\n              name='email'\n              placeholder='example@email.com'\n              {...email}\n              required\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formPlaintextPassword'>\n          <Col>\n            <Form.Control\n              size='lg'\n              type='password'\n              name='password'\n              placeholder='Enter your password'\n              {...password}\n              required\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group>\n          <Button type='submit' variant='outline-primary'>\n            Login\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n\nexport { useFormInput, Login }\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react'\nimport Alert from 'react-bootstrap/Alert'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport { signup } from '../../services/auth'\nimport { useFormInput } from './Login'\n\nimport '../../assets/auth/auth.css'\n\nconst SignUp = (props) => {\n  const name = useFormInput('')\n  const email = useFormInput('')\n  const password = useFormInput('')\n  const [ signUpError, setSignUpError ] = useState(false)\n  const [ errorMessage, setErrorMessage ] = useState('')\n\n  const onSubmit = (event) => {\n    event.preventDefault()\n    signup(name.value, email.value, password.value)\n      .then((user) => {\n        props.setUser(user)\n        props.history.push('/bookmarks')\n      })\n      .catch((error) => {\n        props.setUser(null)\n        setSignUpError(true)\n        switch (error) {\n          case 0:\n            setErrorMessage('Could not connect to server 🙁')\n            break\n          case 409:\n            setErrorMessage('The email already exists')\n            break\n          default:\n            setErrorMessage('Something went wrong... 😩')\n            break\n        }\n      })\n  }\n\n  const handleDismiss = (show) => setSignUpError(show)\n\n  return (\n    <div className='container'>\n      <Form display='block' onSubmit={onSubmit}>\n        <Form.Group as={Row} controlId='errorMessage'>\n          <Col>\n            {signUpError && (\n              <Alert variant='danger' onClose={handleDismiss} dismissible>\n                <Alert.Heading>You got an error </Alert.Heading>\n                <p>{errorMessage}</p>\n              </Alert>\n            )}\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formPlaintextPassword'>\n          <Col>\n            <Form.Control\n              size='lg'\n              type='text'\n              name='name'\n              placeholder='Enter your name'\n              {...name}\n              required\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formPlaintextPassword'>\n          <Col>\n            <Form.Control\n              size='lg'\n              type='email'\n              name='email'\n              placeholder='example@email.com'\n              {...email}\n              required\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formPlaintextPassword'>\n          <Col>\n            <Form.Control\n              size='lg'\n              type='password'\n              name='password'\n              placeholder='Enter your password'\n              required\n              {...password}\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group>\n          <Button type='submit' variant='outline-primary'>\n            Sign up\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n\nexport default SignUp\n","import React from 'react'\n\nimport 'assets/Home.css'\n\nconst Home = () => {\n  return (\n    <div className='container left-box'>\n      <div className='row'>\n        <div className='col-md-8'>\n          <span className='anim-left'> A place where your bookmarks</span>\n          <span className='anim-bottom'> can call Home.</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport { ListGroup } from 'react-bootstrap'\n\nconst TagsList = (props) => {\n  const { bookmarks, activeTags } = props\n\n  const handleClick = (tagId, tagName, event) => {\n    if (event.target.classList.contains('active')) {\n      event.target.style.backgroundColor = 'white'\n      const indexOfTag = activeTags.indexOf(tagId)\n      if (indexOfTag !== -1) activeTags.splice(indexOfTag, 1)\n      props.handleTagClick()\n    } else {\n      event.target.style.backgroundColor = 'blue'\n      activeTags.push(tagId)\n      props.handleTagClick()\n    }\n    event.target.classList.toggle('active')\n  }\n\n  // Since a bookmark can have multiple tags I was having duplicated tags\n  // To avoid that I am splitting tags id's and names in two separated Sets\n  const tagIds = new Set()\n  const tagNames = new Set()\n  if (bookmarks.length)\n    bookmarks.map((bookmark) =>\n      bookmark._tags.forEach((tag) => {\n        tagIds.add(tag._id)\n        tagNames.add(tag.name)\n      })\n    )\n  const ids = [ ...tagIds ]\n  const tagsList = [ ...tagNames ].map((tagName, idx) => (\n    <ListGroup.Item\n      style={{\n        padding: '10px 20px',\n        marginTop: '1px',\n        marginBottom: '1px',\n        backgroundColor: '#f9f9f9'\n      }}\n      action\n      onClick={(event) => handleClick(ids[idx], tagName, event)}\n      as='li'\n      key={ids[idx]}\n    >\n      {tagName}\n    </ListGroup.Item>\n  ))\n  return (\n    <ListGroup\n      as='ul'\n      style={{\n        padding: '0 20px'\n      }}\n    >\n      {tagsList}\n    </ListGroup>\n  )\n}\n\nexport default TagsList\n","import axios from 'axios'\n\nconst service = axios.create({\n  // eslint-disable-next-line no-undef\n  baseURL: process.env.REACT_APP_SERVER_API_URL,\n  withCredentials: true\n})\n\nconst addBookmark = (title, url, tags) => {\n  return service\n    .post('/bookmark', { title, url, tags })\n    .then((response) => response.data)\n    .catch((error) => Promise.reject(error))\n}\n\nconst bookmarks = () => {\n  return service\n    .get('/bookmark')\n    .then((response) => response.data)\n    .catch((error) => error)\n}\n\nconst getBookmarkById = (_id) => {\n  service\n    .get(`/bookmark/:${_id}`)\n    .then((bookmark) => bookmark)\n    .catch((error) => error)\n}\n\n/**\n * Edit bookmark\n * @param {string} _id id of the bookmark being edited\n * @param {string} title Title of the bookmark being edited\n * @param {string} url URL of the bookmark being edited\n * @param {[string]} tags Tags edited/added to the bookmark being edited\n * @returns {Promise}\n */\nconst editBookmark = async (_id, title, url, tags) => {\n  try {\n    return await service.put(`/bookmark/${_id}`, { title, url, tags })\n  } catch (error) {\n    return Promise.reject(error)\n  }\n}\n\nconst deleteBookmark = async (_id) => {\n  try {\n    return await service.delete(`/bookmark/${_id}`)\n  } catch (error) {\n    return Promise.reject(error)\n  }\n}\n\nexport { addBookmark, bookmarks, getBookmarkById, editBookmark, deleteBookmark }\n","import axios from 'axios'\n\nconst service = axios.create({\n  baseURL: process.env.REACT_APP_SERVER_API_URL,\n  withCredentials: true\n})\n\nconst tags = () => {\n  return service\n    .get('/tag')\n    .then((response) => response.data)\n    .catch((error) => error)\n}\n\nconst tagsById = (_id) => {\n  return service\n    .get(`/tag/${_id}`)\n    .then((tag) => tag)\n    .catch((error) => error)\n}\n\nconst editTag = (_id, name) => {\n  return service\n    .put(`/tag/${_id}`, { name })\n    .then((tag) => tag)\n    .catch((error) => error)\n}\n\nconst deleteTag = async (_id) => {\n  try {\n    return await service.delete(`/tag/${_id}`)\n  } catch (error) {\n    return Promise.reject(error)\n  }\n}\n\nexport { tags, tagsById, editTag, deleteTag }\n","import React from 'react'\nimport {\n  Button,\n  ButtonGroup,\n  ButtonToolbar,\n  Card,\n  CardColumns\n} from 'react-bootstrap'\n\nconst BookmarkCard = (props) => {\n  const { bookmarks, handleDeleteBookmark, handleEditBookmark } = props\n\n  const handleClick = (event, bookmark) => {\n    event.persist()\n    switch (event.target.innerText) {\n      case 'Edit':\n        handleEditBookmark(bookmark)\n        break\n      case 'Delete':\n        handleDeleteBookmark(bookmark)\n        break\n      default:\n        break\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <CardColumns>\n        {bookmarks.map((bookmark, index) => (\n          <Card key={index} border=\"info\" style={{ width: '18rem' }}>\n            <Card.Body>\n              <Card.Title>{bookmark.title}</Card.Title>\n              <Card.Text>{bookmark.url}</Card.Text>\n            </Card.Body>\n            <Card.Footer>\n              <ButtonToolbar className=\"justify-content-between\">\n                <ButtonGroup>\n                  <Button\n                    onClick={(evt) => handleClick(evt, bookmark)}\n                    variant=\"success\"\n                    size=\"sm\"\n                  >\n                    Edit\n                  </Button>\n                </ButtonGroup>\n                <ButtonGroup>\n                  <Button\n                    onClick={(evt) => handleClick(evt, bookmark)}\n                    variant=\"danger\"\n                    size=\"sm\"\n                  >\n                    Delete\n                  </Button>\n                </ButtonGroup>\n              </ButtonToolbar>\n            </Card.Footer>\n          </Card>\n        ))}\n      </CardColumns>\n    </React.Fragment>\n  )\n}\n\nexport default BookmarkCard\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst AlertError = (props) => (\n  <Alert variant=\"danger\">\n    <Alert.Heading>Something whent wrong</Alert.Heading>\n    <p>{props.errorMessage}</p>\n  </Alert>\n)\n\nexport default AlertError\n","import React from 'react'\nimport { InputGroup } from 'react-bootstrap'\n\nconst InputGroupElement = (props) => {\n  return <InputGroup className=\"mb-3\">{props.children}</InputGroup>\n}\n\nexport default InputGroupElement\n","import React from 'react'\nimport { InputGroup } from 'react-bootstrap'\n\nconst InputGroupPrependElement = (props) => {\n  return (\n    <InputGroup.Prepend>\n      <InputGroup.Text>{props.groupText}</InputGroup.Text>\n    </InputGroup.Prepend>\n  )\n}\n\nexport default InputGroupPrependElement\n","import React, { useState } from 'react'\nimport { FormControl } from 'react-bootstrap'\n\nconst FormControlElement = (props) => {\n  const [state, setState] = useState({\n    value: props.value ? props.value : '',\n    title: props.bookmarkTitle,\n    url: props.bookmarkUrl,\n    tags: props.bookmarkTags\n  })\n\n  const handleChange = (event) => {\n    const {\n      target: { name, value }\n    } = event\n    // this controls the value displayed in the View\n    setState({ value: value })\n    // This controls the  state values of the bookmark's properties\n    setState({ name, value })\n    props.onChange(event)\n  }\n\n  return (\n    <FormControl\n      name={props.name}\n      placeholder={props.placeholder}\n      as=\"input\"\n      focus={props.focus.toString()}\n      aria-describedby={props.name}\n      onChange={handleChange}\n      // value={props.value}\n      value={state.value}\n    />\n  )\n}\n\nexport default FormControlElement\n","import React from 'react'\nimport { Button } from 'react-bootstrap'\n\nconst ButtonElement = (props) => {\n  return (\n    <Button type={props.type} variant={props.variant} onClick={props.onClick}>\n      {props.text}\n    </Button>\n  )\n}\n\nexport default ButtonElement\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react'\nimport { Modal } from 'react-bootstrap'\n// eslint-disable-next-line import/no-unresolved\nimport { addBookmark, editBookmark } from 'services/bookmark'\nimport AlertError from './AlertError'\nimport InputGroupElement from './InputGroupElement'\nimport InputGroupPrependElement from './InputGroupPrependElement'\nimport FormControlElement from './FormControlElement'\nimport ButtonElement from './ButtonElement'\n\nconst AddNewBookmark = (props) => {\n  const [title, setTitle] = useState(props.editing ? props.bookmark.title : '')\n  const [url, setUrl] = useState(props.editing ? props.bookmark.url : '')\n  const [tags, setTags] = useState(\n    props.editing\n      ? props.bookmark._tags.map((tag) => tag.name).reduce((val, next) => `${val},${next}`, '')\n      : ''\n  )\n  const [showModal, setShowModal] = useState(props.showModal)\n  const [saving, setSaving] = useState(false)\n  const [errorMessage, setErrorMessage] = useState('')\n  const [error, setError] = useState(false)\n\n  const setState = (state, newValue) => {\n    switch (state) {\n      case 'title':\n        setTitle(newValue)\n        break\n      case 'url':\n        setUrl(newValue)\n        break\n      case 'tags':\n        setTags(newValue.toLowerCase())\n        break\n      default:\n        break\n    }\n  }\n\n  const handleCancel = () => {\n    setError(false)\n    setShowModal(false)\n    if (props.editing) props.hideModal()\n  }\n\n  const handleSave = () => {\n    if (url.trim().length === 0) {\n      setErrorMessage(\"URL can't be empty\")\n      setError(true)\n    } else if (title.trim().length === 0) {\n      setErrorMessage(\"Title can't be empty\")\n      setError(true)\n    } else {\n      setError(false)\n      setSaving(true)\n      const arrayOfTags = tags.split(',').filter((tag) => tag.trim())\n      if (props.editing) {\n        editBookmark(props.bookmark._id, title, url, arrayOfTags)\n          .then((editedBookmark) => {\n            setSaving(false)\n            setShowModal(false)\n            // TODO: Show message in the modal insteaf of alert popup\n            props.saveUrl({ newBookmark: editedBookmark })\n          })\n          .catch((error) => alert(`error editing bookmark:  ${error}`))\n      } else {\n        addBookmark(title, url, arrayOfTags)\n          .then((bookmark) => {\n            setSaving(false)\n            setShowModal(false)\n            props.saveUrl({ newBookmark: bookmark })\n          })\n          .catch((error) => {\n            setErrorMessage(error.message)\n            setShowModal(true)\n            setSaving(false)\n            setError(true)\n          })\n      }\n      setUrl('')\n      setTitle('')\n      setTags('')\n    }\n  }\n\n  const handleChange = (event) => {\n    const { name, value } = event.target\n    setState(name, value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    setShowModal(false)\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <ButtonElement\n        type=\"button\"\n        variant=\"outline-secondary\"\n        onClick={() => setShowModal(true)}\n        text=\"Add\"\n      />\n      <Modal centered show={showModal} autoFocus onHide={() => setShowModal(false)}>\n        <Modal.Header>\n          <Modal.Title>{props.modalTitle}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <InputGroupElement>\n            <InputGroupPrependElement groupText=\"www\" />\n            <FormControlElement\n              as=\"input\"\n              name=\"url\"\n              placeholder=\"www.example.com\"\n              focus\n              onChange={handleChange}\n              value={props.bookmark ? props.bookmark.url : ''}\n            />\n          </InputGroupElement>\n          <label htmlFor=\"url\">Separate tags by , </label>\n          <InputGroupElement>\n            <InputGroupPrependElement groupText=\"Tags\" />\n            <FormControlElement\n              name=\"tags\"\n              placeholder=\"tag1, tag2,\"\n              focus=\"false\"\n              onChange={handleChange}\n              value={\n                props.bookmark\n                  ? props.bookmark._tags\n                      .map((tag) => tag.name)\n                      .reduce((val, next) => val + ',' + next, '')\n                  : ''\n              }\n            />\n            <InputGroupPrependElement groupText=\"Title\" />\n            <FormControlElement\n              as=\"input\"\n              name=\"title\"\n              placeholder=\"Title\"\n              focus=\"false\"\n              onChange={handleChange}\n              value={props.bookmark ? props.bookmark.title : ''}\n              // This element is the last one to be rendered that's way I am passing\n              // the values of title, url and tags here, otherwise they get cleared everytime\n              // the elements above are rendered\n              bookmarkTitle={props.bookmark ? props.bookmark.title : ''}\n              bookmarkUrl={props.bookmark ? props.bookmark.url : ''}\n              bookmarkTags={\n                props.bookmark\n                  ? props.bookmark._tags\n                      .map((tag) => tag.name)\n                      .reduce((val, next) => val + ',' + next, '')\n                  : ''\n              }\n            />\n          </InputGroupElement>\n        </Modal.Body>\n        <Modal.Footer>\n          <ButtonElement type=\"submit\" variant=\"danger\" onClick={handleCancel} text=\"Cancel\" />\n          <ButtonElement\n            type=\"submit\"\n            variant=\"success\"\n            onClick={handleSave}\n            text={saving ? 'Saving...' : 'Save'}\n          />\n        </Modal.Footer>\n        {error && <AlertError errorMessage={errorMessage} />}\n      </Modal>\n    </form>\n  )\n}\n\nexport { AddNewBookmark, AddNewBookmark as EditBookmark }\n","/* eslint-disable import/no-unresolved */\n/* eslint-disable react/no-did-update-set-state */\n/* eslint-disable react/no-array-index-key */\nimport React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport { Alert, Col, Jumbotron, Row } from 'react-bootstrap'\nimport { TagsList } from 'components/Tags'\nimport { bookmarks, deleteBookmark } from 'services/bookmark'\nimport { deleteTag } from 'services/tags'\nimport BookmarkCard from './Card'\nimport { EditBookmark } from './Add'\n\nclass EditBookmarkModal extends Component {\n  constructor(props) {\n    super(props)\n    this.el = document.createElement('div')\n  }\n  componentDidMount() {\n    document.getElementById('edit-bookmark').appendChild(this.el)\n  }\n\n  // NOTE: this is called after user click the edit button for a second time\n  // Maybe I can use this to change the showEditBookmarkModal value to false again\n  componentDidUpdate() {}\n\n  componentWillUnmount() {\n    document.getElementById('edit-bookmark').removeChild(this.el)\n  }\n\n  render() {\n    return ReactDOM.createPortal(this.props.children, this.el)\n  }\n}\n\n// eslint-disable-next-line react/no-multi-comp\nclass BookmarksList extends Component {\n  state = {\n    bookmark: null,\n    bookmarksList: [],\n    filteredBookmarks: [],\n    userLoggedIn: this.props.userLoggedIn,\n    showEditBookmarkModal: false\n  }\n  activeTags = []\n\n  componentDidMount() {\n    this.getBookmarks()\n  }\n\n  // componentDidUpdate(prevProps, prevState) {\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.setState({ userLoggedIn: this.props.userLoggedIn })\n      this.setState({ showEditBookmarkModal: false })\n      this.getBookmarks()\n    }\n  }\n\n  getBookmarks = () => {\n    bookmarks()\n      .then((bookmarks) => {\n        this.setState({\n          bookmarksList: bookmarks,\n          filteredBookmarks: bookmarks\n        })\n      })\n      .catch((error) => alert(error))\n  }\n\n  /**\n   * @param {string} tagId - Id of a tag object\n   * @returns {Array} - Bookmarks associated with the tag\n   */\n  getBookmarksByTag = (tagId) => {\n    return this.state.bookmarksList.filter((bookmark) =>\n      bookmark._tags.find((tag) => tag._id === tagId)\n    )\n  }\n\n  /**\n   * Function\n   * Filter the list of bookmarks when one or more tags are selected\n   */\n  handleTagClick = () => {\n    const { activeTags } = this\n    const _filteredBookmarks = []\n    if (activeTags.length) {\n      activeTags.forEach((tagId) => {\n        const _bookmarks = this.getBookmarksByTag(tagId)\n        // TODO: Check if I need to do this indeed\n        _bookmarks.forEach((bookmark) => {\n          if (!_filteredBookmarks.includes(bookmark)) _filteredBookmarks.push(bookmark)\n        })\n      })\n      this.setState({ filteredBookmarks: _filteredBookmarks })\n    } else {\n      this.setState((prevState) => ({\n        filteredBookmarks: prevState.bookmarksList\n      }))\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  handleEditBookmark = (bookmark) => {\n    this.setState({ bookmark: bookmark })\n    this.setState({ showEditBookmarkModal: true })\n  }\n\n  /**\n   * Function\n   * @param {{title: string, url: string, _tags:[string]}} bookmark - A Bookmark object\n   */\n  handleDeleteBookmark = (bookmark) => {\n    bookmark._tags.forEach((tag) => {\n      const bookmarksByTag = this.getBookmarksByTag(tag._id)\n      if (bookmarksByTag.length === 1) {\n        deleteTag(tag._id)\n          .then()\n          .catch((error) => alert(error))\n      }\n    })\n    deleteBookmark(bookmark._id)\n      .then(() => this.getBookmarks())\n      .catch((error) => alert(error))\n  }\n\n  hideModal = () => {\n    this.setState({ showEditBookmarkModal: false })\n  }\n\n  render() {\n    const showModal = this.state.showEditBookmarkModal ? (\n      <EditBookmarkModal>\n        <EditBookmark\n          showModal\n          saveUrl={this.props.saveUrl}\n          bookmark={this.state.bookmark}\n          userLoggedIn={this.state.userLoggedIn}\n          editing\n          hideModal={this.hideModal}\n          modalTitle=\"Edit bookmark\"\n        />\n      </EditBookmarkModal>\n    ) : (\n      ''\n    )\n    return (\n      <div>\n        {showModal}\n        <Jumbotron style={{ height: '100vh', paddingTop: '130px', marginBottom: '0px' }}>\n          <Row>\n            <Col xs={2}>\n              <TagsList\n                activeTags={this.activeTags}\n                handleTagClick={this.handleTagClick}\n                bookmarks={this.state.bookmarksList}\n              />\n            </Col>\n            <Col xs={9}>\n              {this.state.userLoggedIn ? (\n                <React.Fragment>\n                  <BookmarkCard\n                    handleEditBookmark={this.handleEditBookmark}\n                    handleDeleteBookmark={this.handleDeleteBookmark}\n                    bookmarks={this.state.filteredBookmarks}\n                  />\n                </React.Fragment>\n              ) : (\n                <React.Fragment>\n                  <Alert variant=\"danger\">\n                    <Alert.Heading>Protected content</Alert.Heading>\n                    <p>\n                      You need to\n                      <strong>Log in</strong>\n                      or\n                      <strong>Sign up</strong>\n                      first.\n                    </p>\n                  </Alert>\n                </React.Fragment>\n              )}\n            </Col>\n          </Row>\n        </Jumbotron>\n      </div>\n    )\n  }\n}\n\nexport default BookmarksList\n","import React, { useState } from 'react'\nimport { FormControl } from 'react-bootstrap'\n\nconst SearchBookmarks = (props) => {\n  const [ input, setInput ] = useState('')\n\n  const handleChange = (event) => {\n    const { value } = event.target\n    props.filterBookmarks(value)\n    setInput({ input: value })\n  }\n\n  return (\n    <FormControl\n      hidden\n      placeholder={props.placeholder}\n      onChange={handleChange}\n      value={input}\n      className='mr-sm-2'\n    />\n  )\n}\n\nexport default SearchBookmarks\n","/* eslint-disable react/no-did-update-set-state */\n/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\n\n// import { logout } from 'services/auth'\nimport { logout } from '../services/auth'\nimport { AddNewBookmark } from './Bookmarks/Add'\nimport SearchBookmarks from './Bookmarks/Search'\n\nclass AppNavbar extends Component {\n  state = {\n    userLoggedIn: this.props.userLoggedIn\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.userLoggedIn !== prevProps.userLoggedIn) {\n      this.setState({\n        userLoggedIn: this.props.userLoggedIn\n      })\n    }\n  }\n\n  handleLogout = () => {\n    logout().then(() => {\n      this.setState({ userLoggedIn: null })\n      this.props.setUser(null)\n    })\n  }\n\n  render() {\n    return (\n      <Navbar fixed=\"top\" variant=\"dark\" bg=\"dark\" expand=\"lg\">\n        <Navbar.Brand>\n          {/* TODO: Move style to css file */}\n          <Link to=\"/bookmarks\" style={{ textDecoration: 'none', color: '#9A9DA0' }}>\n            Bookmarks\n          </Link>\n        </Navbar.Brand>\n        <Navbar>\n          {this.state.userLoggedIn && (\n            <AddNewBookmark\n              editing={false}\n              saveUrl={this.props.saveUrl}\n              userLoggedIn={this.state.userLoggedIn}\n              modalTitle=\"Add new bookmark\"\n            />\n          )}\n        </Navbar>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse className=\"justify-content-end\" id=\"basic-navbar-nav\">\n          <Nav hidden={!this.state.userLoggedIn} className=\"justify-content-center\">\n            <Nav.Item>\n              <Form inline>\n                <SearchBookmarks placeholder=\"Search...\" />\n              </Form>\n            </Nav.Item>\n          </Nav>\n          <Nav className=\"justify-content-end\">\n            {this.state.userLoggedIn ? (\n              <React.Fragment>\n                <Nav.Item>\n                  <Nav.Link\n                    variant=\"outline-info\"\n                    as=\"a\"\n                    href=\"/\"\n                    onClick={this.handleLogout}\n                    style={{ textDecoration: 'none', color: '#9A9DA0' }}\n                  >\n                    Log out\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link\n                    variant=\"outline-info\"\n                    as=\"a\"\n                    href=\"/Settings\"\n                    disabled\n                    style={{ textDecoration: 'none', color: '#9A9DA0' }}\n                  >\n                    Settings\n                  </Nav.Link>\n                </Nav.Item>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                <Nav.Item>\n                  <Nav.Link\n                    variant=\"outline-linfo\"\n                    as=\"a\"\n                    href=\"/login\"\n                    style={{ textDecoration: 'none', color: '#9A9DA0' }}\n                  >\n                    Log in\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link\n                    variant=\"outline-info\"\n                    as=\"a\"\n                    href=\"/sign-up\"\n                    style={{ textDecoration: 'none', color: '#9A9DA0' }}\n                  >\n                    Sign up\n                  </Nav.Link>\n                </Nav.Item>\n              </React.Fragment>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    )\n  }\n}\n\nexport default AppNavbar\n","/* eslint-disable react/jsx-boolean-value */\n/* eslint-disable react/no-unused-state */\nimport React, { useEffect, useState } from 'react'\nimport { Router, Switch, Route } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\n\nimport SignUp from './components/Auth/SignUp'\nimport { Login } from './components/Auth/Login'\nimport { loggedIn } from './services/auth'\nimport Home from './components/Home'\nimport BookmarksList from './components/Bookmarks/BookmarksList'\nimport AppNavbar from './components/AppNavbar'\n\nconst browserHistory = createBrowserHistory()\n\nconst App = () => {\n  const [loggedInUser, setLoggedInUser] = useState(null)\n\n  useEffect(() => {\n    if (!loggedInUser) {\n      loggedIn().then((user) => {\n        setLoggedInUser(user)\n      })\n    }\n  }, [loggedInUser])\n\n  const setUser = (user) => setLoggedInUser(user)\n\n  // update the list of bookmarks after a new bookmark is successfully added to the database\n  // So far, I don't need to manage bookmark state itself\n  const [, setBookmark] = useState(null)\n\n  const saveNewBookmark = (newBookmark) => {\n    setBookmark(newBookmark)\n  }\n\n  return (\n    <div>\n      <Router history={browserHistory}>\n        <AppNavbar saveUrl={saveNewBookmark} setUser={setUser} userLoggedIn={loggedInUser} />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route\n            exact\n            path=\"/sign-up\"\n            render={(props) => <SignUp {...props} setUser={setUser} />}\n          />\n          <Route exact path=\"/login\" render={(props) => <Login {...props} setUser={setUser} />} />\n          <Route\n            exact\n            path=\"/bookmarks\"\n            render={(props) => (\n              <BookmarksList saveUrl={saveNewBookmark} {...props} userLoggedIn={loggedInUser} />\n            )}\n          />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}