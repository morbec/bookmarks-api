{"version":3,"sources":["services/bookmark.js","components/Bookmarks/Add.jsx","services/auth.js","components/AppNavbar.jsx","components/Auth/Login.jsx","components/Auth/SignUp.jsx","components/Bookmarks/BookmarksList.jsx","components/Home.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["service","axios","create","baseURL","process","withCredentials","AlertError","props","react_default","a","createElement","Alert","variant","Heading","errorMessage","InputGroupElement","InputGroup","className","children","InputGroupPrependElement","Prepend","Text","groupText","FormControlElement","es_FormControl","name","placeholder","as","focus","toString","aria-describedby","onChange","ButtonElement","Button","type","onClick","text","AddNewBookmark","_useState","useState","userLoggedIn","_useState2","Object","slicedToArray","_useState3","_useState4","title","setTitle","_useState5","_useState6","url","setUrl","_useState7","_useState8","tags","setTags","_useState9","_useState10","showModal","setShowModal","_useState11","_useState12","saving","setSaving","_useState13","_useState14","error","setError","handleChange","event","_event$target","target","state","newValue","toLowerCase","setState","value","onSubmit","preventDefault","Add_ButtonElement","Modal","centered","show","autoFocus","onHide","Header","Title","Body","Add_InputGroupElement","Add_InputGroupPrependElement","Add_FormControlElement","htmlFor","Footer","arrayOfTags","split","map","tag","trim","post","then","response","data","catch","Promise","reject","addBookmark","bookmark","saveUrl","newBookmark","message","Add_AlertError","logout","AppNavbar","_this","handleLogout","setUser","prevProps","this","Navbar_default","sticky","bg","expand","Brand","react_router_dom","to","style","textDecoration","color","Add","Toggle","aria-controls","Collapse","id","Nav_default","hidden","Item","Form_default","inline","FormControl_default","disabled","Fragment","Link","Component","useFormInput","initialValue","setValue","Login","email","password","loginError","setLoginError","setErrorMessage","display","request","status","login","user","history","push","Group","Row","controlId","Col_default","Alert_default","onClose","dismissible","Control","assign","size","required","Button_default","SignUp","signUpError","setSignUpError","signup","BookmarksList","bookmarksList","getBookmarks","get","concat","e","prevState","Jumbotron_default","height","ListGroup_default","lnk","idx","padding","marginTop","marginBottom","borderRadius","key","href","Home","browserHistory","createBrowserHistory","App","loggedInUser","setLoggedInUser","useEffect","setBookmark","react_router","components_AppNavbar","exact","path","component","render","Auth_SignUp","Login_Login","Bookmarks_BookmarksList","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.34a819fe.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst service = axios.create({\n  baseURL: process.env.REACT_APP_SERVER_API_URL,\n  withCredentials: true\n})\n\nconst addBookmark = (title, url, tags) => {\n  return service\n    .post('/bookmark', { title, url, tags })\n    .then((response) => response.data)\n    .catch((error) => Promise.reject(error))\n}\n\nconst bookmarks = () => {\n  return service.get('/bookmark').then((bookmarks) => bookmarks).catch((error) => error)\n}\n\nconst getBookmarkById = (_id) => {\n  service.get(`/bookmark/:${_id}`).then((bookmark) => bookmark).catch((error) => error)\n}\n\nconst editBookmark = (_id, title, url) => {\n  service.put(`/bookmark/:${_id}`, { title, url }).then((bookmark) => bookmark).catch((error) => error)\n}\n\nconst deleteBookmark = (_id) => {\n  service.delete(`/bookmark/:${_id}`).then((response) => response.data).catch((error) => error)\n}\n\nconst scrape = (anyURL) => {\n  return service\n    .post('/bookmark/scrape', { anyURL })\n    .then((res) => {\n      return res.data\n    })\n    .catch((e) => e)\n  //TODO: Handle the error above\n}\n\nexport { addBookmark, bookmarks, getBookmarkById, editBookmark, deleteBookmark, scrape }\n","/* eslint-disable react/prop-types */\n/* eslint-disable import/no-unresolved */\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Alert, Button, Modal, InputGroup, FormControl } from 'react-bootstrap'\nimport { addBookmark } from 'services/bookmark'\n\nconst AlertError = (props) => (\n  <Alert variant='danger'>\n    <Alert.Heading>Something whent wrong</Alert.Heading>\n    <p>{props.errorMessage}</p>\n  </Alert>\n)\n\nconst InputGroupElement = (props) => {\n  return <InputGroup className='mb-3'>{props.children}</InputGroup>\n}\n\nconst InputGroupPrependElement = (props) => {\n  return (\n    <InputGroup.Prepend>\n      <InputGroup.Text>{props.groupText}</InputGroup.Text>\n    </InputGroup.Prepend>\n  )\n}\n\nconst FormControlElement = (props) => {\n  return (\n    <FormControl\n      name={props.name}\n      placeholder={props.placeholder}\n      // id={props.name}\n      as='input'\n      focus={props.focus.toString()}\n      aria-describedby={props.name}\n      onChange={props.onChange}\n    />\n  )\n}\n\nconst ButtonElement = (props) => {\n  return (\n    <Button type={props.type} variant={props.variant} onClick={props.onClick}>\n      {props.text}\n    </Button>\n  )\n}\n\nconst AddNewBookmark = (props) => {\n  const [ userLoggedIn, setUserLoggedIn ] = useState(props.userLoggedIn)\n  const [ title, setTitle ] = useState('')\n  const [ url, setUrl ] = useState('')\n  const [ tags, setTags ] = useState('')\n  const [ showModal, setShowModal ] = useState(false)\n  const [ saving, setSaving ] = useState(false)\n  let errorMessage = ''\n  const [ error, setError ] = useState(false)\n\n  const setState = (state, newValue) => {\n    switch (state) {\n      case 'title':\n        setTitle(newValue)\n        break\n      case 'url':\n        setUrl(newValue)\n        break\n      case 'tags':\n        setTags(newValue.toLowerCase())\n        break\n      default:\n        break\n    }\n  }\n\n  const handleCancel = () => {\n    setError(false)\n    setShowModal(false)\n  }\n\n  const handleSave = () => {\n    setSaving(true)\n    const arrayOfTags = tags.split(',').map((tag) => tag.trim())\n    addBookmark(title, url, arrayOfTags)\n      .then((bookmark) => {\n        setSaving(false)\n        setShowModal(false)\n        props.saveUrl({ newBookmark: bookmark })\n      })\n      .catch((error) => {\n        errorMessage = error.message\n        setShowModal(true)\n        setSaving(false)\n        setError(true)\n      })\n  }\n\n  const handleChange = (event) => {\n    const { name, value } = event.target\n    setState(name, value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    setShowModal(false)\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <ButtonElement\n        type='button'\n        variant='outline-secondary'\n        onClick={() => setShowModal(true)}\n        text='Add'\n      />\n      <Modal centered show={showModal} autoFocus onHide={() => setShowModal(false)}>\n        <Modal.Header>\n          <Modal.Title>Add new bookmark</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <InputGroupElement>\n            <InputGroupPrependElement groupText='www' />\n            <FormControlElement name='url' placeholder='www.example.com' focus onChange={handleChange} />\n          </InputGroupElement>\n          <label htmlFor='url'>Separate tags by , </label>\n          <InputGroupElement>\n            <InputGroupPrependElement groupText='Tags' />\n            <FormControlElement name='tags' placeholder='tag1, tag2,' focus='false' onChange={handleChange} />\n            <InputGroupPrependElement groupText='Title' />\n            <FormControlElement name='title' placeholder='Title' focus='false' onChange={handleChange} />\n          </InputGroupElement>\n        </Modal.Body>\n        <Modal.Footer>\n          <ButtonElement type='submit' variant='danger' onClick={handleCancel} text='Cancel' />\n          <ButtonElement\n            type='submit'\n            variant='success'\n            onClick={handleSave}\n            text={saving ? 'Saving...' : 'Save'}\n          />\n        </Modal.Footer>\n        {error && <AlertError errorMessage={errorMessage} />}\n      </Modal>\n    </form>\n  )\n}\n\nexport default AddNewBookmark\n","import axios from 'axios'\n\nconst service = axios.create({\n  baseURL: process.env.REACT_APP_SERVER_API_URL,\n  withCredentials: true\n})\n\nconst signup = (name, email, password) => {\n  return service\n    .post('/auth/signup', { name, email, password })\n    .then((response) => {\n      return response.data\n    })\n    .catch((error) => {\n      return Promise.reject(error.request.status)\n    })\n}\n\nconst login = (email, password) => {\n  return service\n    .post('/auth/login', { email, password })\n    .then((response) => {\n      return response.data\n    })\n    .catch((error) => {\n      return Promise.reject(error.request.status)\n    })\n}\n\n// TODO: Return a rejected Promise in the catch\nconst logout = () => {\n  return service\n    .post('/auth/logout')\n    .then((response) => response.data)\n    .catch((error) => Promise.reject(error))\n}\n\nconst loggedIn = () => {\n  return service.get('/auth/loggedin').then((response) => response.data)\n}\n\nexport { signup, login, logout, loggedIn }\n","/* eslint-disable react/no-did-update-set-state */\n/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\n\nimport AddNewBookmark from './Bookmarks/Add'\nimport { logout } from '../services/auth'\n\nclass AppNavbar extends Component {\n  state = {\n    userLoggedIn: this.props.userLoggedIn\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.userLoggedIn !== prevProps.userLoggedIn) {\n      this.setState({\n        userLoggedIn: this.props.userLoggedIn\n      })\n    }\n  }\n\n  handleLogout = () => {\n    logout().then(() => {\n      this.setState({ userLoggedIn: null })\n      this.props.setUser(null)\n    })\n  }\n\n  render() {\n    return (\n      <Navbar sticky='top' variant='dark' bg='dark' expand='lg'>\n        <Navbar.Brand>\n          {/* TODO: Move style to css file */}\n          <Link to='/bookmarks' style={{ textDecoration: 'none', color: '#9A9DA0' }}>\n            Bookmarks\n          </Link>\n        </Navbar.Brand>\n        <Navbar>\n          {this.state.userLoggedIn && (\n            <AddNewBookmark saveUrl={this.props.saveUrl} userLoggedIn={this.state.userLoggedIn} />\n          )}\n        </Navbar>\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\n        <Navbar.Collapse className='justify-content-end' id='basic-navbar-nav'>\n          <Nav hidden={!this.state.userLoggedIn} className='justify-content-center'>\n            <Nav.Item>\n              <Form inline>\n                <FormControl type='text' disabled placeholder='Search...' className='mr-sm-2' />\n              </Form>\n            </Nav.Item>\n          </Nav>\n          <Nav className='justify-content-end'>\n            {this.state.userLoggedIn ? (\n              <React.Fragment>\n                <Nav.Item>\n                  <Nav.Link variant='outline-info'>\n                    {/* TODO: Move style to css file */}\n                    <Link\n                      variant='outline-info'\n                      to='/'\n                      onClick={this.handleLogout}\n                      style={{ textDecoration: 'none', color: '#9A9DA0' }}\n                    >\n                      Log out\n                    </Link>\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link variant='outline-info'>\n                    {/* TODO: Move style to css file */}\n                    <Link to='/Settings' disabled style={{ textDecoration: 'none', color: '#9A9DA0' }}>\n                      Settings\n                    </Link>\n                  </Nav.Link>\n                </Nav.Item>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                <Nav.Item>\n                  <Nav.Link variant='outline-linfo'>\n                    {/* TODO: Move style to css file */}\n                    <Link to='/login' style={{ textDecoration: 'none', color: '#9A9DA0' }}>\n                      Log in\n                    </Link>\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link variant='outline-info'>\n                    {/* TODO: Move style to css file */}\n                    <Link to='/sign-up' style={{ textDecoration: 'none', color: '#9A9DA0' }}>\n                      Sign up\n                    </Link>\n                  </Nav.Link>\n                </Nav.Item>\n              </React.Fragment>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    )\n  }\n}\n\nexport default AppNavbar\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react'\nimport Alert from 'react-bootstrap/Alert'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\n\nimport { login } from '../../services/auth'\n\nimport '../../assets/auth/auth.css'\n\n// TODO: Move this to a proper file\nconst useFormInput = (initialValue) => {\n  const [ value, setValue ] = useState(initialValue)\n\n  const handleChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  return {\n    value,\n    onChange: handleChange\n  }\n}\n\nconst Login = (props) => {\n  const email = useFormInput('')\n  const password = useFormInput('')\n  const [ loginError, setLoginError ] = useState(false)\n  const [ errorMessage, setErrorMessage ] = useState('')\n\n  const onSubmit = (event) => {\n    event.preventDefault()\n    setLoginError(false)\n    login(email.value, password.value)\n      .then((user) => {\n        props.setUser(user)\n        props.history.push('/bookmarks')\n      })\n      .catch((error) => {\n        setLoginError(true)\n        switch (error) {\n          case 0:\n            // setErrorMessage('Could not connect to server, try again later. 🙁')\n            setErrorMessage('Could not connect to server 🙁')\n            break\n          case 401:\n            setErrorMessage('Incorrect username or password.')\n            break\n          default:\n            setErrorMessage('Something went wrong... 😩')\n            break\n        }\n        props.setUser(null)\n      })\n  }\n\n  const handleDismiss = (show) => setLoginError(show)\n\n  return (\n    <div className='container'>\n      <Form display='block' onSubmit={onSubmit}>\n        <Form.Group as={Row} controlId='errorMessage'>\n          <Col>\n            {loginError ? (\n              <Alert variant='danger' onClose={handleDismiss} dismissible>\n                <Alert.Heading>You got an error</Alert.Heading>\n                <p>{errorMessage}</p>\n              </Alert>\n            ) : (\n              <React.Fragment />\n            )}\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formPlaintextEmail'>\n          <Col>\n            <Form.Control\n              size='lg'\n              type='email'\n              name='email'\n              placeholder='example@email.com'\n              {...email}\n              required\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formPlaintextPassword'>\n          <Col>\n            <Form.Control\n              size='lg'\n              type='password'\n              name='password'\n              placeholder='Enter your password'\n              {...password}\n              required\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group>\n          <Button type='submit' variant='outline-primary'>\n            Login\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n\nexport { useFormInput, Login }\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react'\nimport Alert from 'react-bootstrap/Alert'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport { signup } from '../../services/auth'\nimport { useFormInput } from './Login'\n\nimport '../../assets/auth/auth.css'\n\nconst SignUp = (props) => {\n  const name = useFormInput('')\n  const email = useFormInput('')\n  const password = useFormInput('')\n  const [ signUpError, setSignUpError ] = useState(false)\n  const [ errorMessage, setErrorMessage ] = useState('')\n\n  const onSubmit = (event) => {\n    event.preventDefault()\n    signup(name.value, email.value, password.value)\n      .then((user) => {\n        props.setUser(user)\n        props.history.push('/bookmarks')\n      })\n      .catch((error) => {\n        props.setUser(null)\n        setSignUpError(true)\n        switch (error) {\n          case 0:\n            setErrorMessage('Could not connect to server 🙁')\n            break\n          case 409:\n            setErrorMessage('The email already exists')\n            break\n          default:\n            setErrorMessage('Something went wrong... 😩')\n            break\n        }\n      })\n  }\n\n  const handleDismiss = (show) => setSignUpError(show)\n\n  return (\n    <div className='container'>\n      <Form display='block' onSubmit={onSubmit}>\n        <Form.Group as={Row} controlId='errorMessage'>\n          <Col>\n            {signUpError && (\n              <Alert variant='danger' onClose={handleDismiss} dismissible>\n                <Alert.Heading>You got an error </Alert.Heading>\n                <p>{errorMessage}</p>\n              </Alert>\n            )}\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formPlaintextPassword'>\n          <Col>\n            <Form.Control\n              size='lg'\n              type='text'\n              name='name'\n              placeholder='Enter your name'\n              {...name}\n              required\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formPlaintextPassword'>\n          <Col>\n            <Form.Control\n              size='lg'\n              type='email'\n              name='email'\n              placeholder='example@email.com'\n              {...email}\n              required\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formPlaintextPassword'>\n          <Col>\n            <Form.Control\n              size='lg'\n              type='password'\n              name='password'\n              placeholder='Enter your password'\n              required\n              {...password}\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group>\n          <Button type='submit' variant='outline-primary'>\n            Sign up\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n\nexport default SignUp\n","/* eslint-disable */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react'\nimport Alert from 'react-bootstrap/Alert'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport axios from 'axios'\n\nclass BookmarksList extends Component {\n  state = {\n    bookmarksList: [],\n    userLoggedIn: this.props.userLoggedIn,\n  }\n\n  componentDidMount() {\n    this.getBookmarks()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      this.setState({ userLoggedIn: this.props.userLoggedIn })\n      this.getBookmarks()\n    }\n  }\n\n  getBookmarks = () => {\n    axios\n      .get(`${process.env.REACT_APP_SERVER_API_URL}/bookmark`, { withCredentials: true })\n      .then((response) => {\n        this.setState({\n          bookmarksList: response.data,\n        })\n      })\n      .catch((e) => e)\n  }\n\n  render() {\n    return (\n      <Jumbotron style={{ height: '100vh' }}>\n        {this.state.userLoggedIn ? (\n          <React.Fragment>\n            <ListGroup variant='flush'>\n              {this.state.bookmarksList.map((lnk, idx) => (\n                // TODO: Move the styling to a proper css file\n                <ListGroup.Item\n                  style={{\n                    padding: '25px',\n                    marginTop: '2px',\n                    marginBottom: '5px',\n                    borderRadius: '10px 10px 10px 10px',\n                  }}\n                  key={idx}\n                  as='a'\n                  target='_blank'\n                  href={lnk.url}>\n                  {lnk.title} - {lnk.url}\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <Alert variant='danger'>\n              <Alert.Heading>Protected content</Alert.Heading>\n              <p>\n                You need to <strong>Log in</strong> or <strong>Sign up</strong> first.\n              </p>\n            </Alert>\n          </React.Fragment>\n        )}\n      </Jumbotron>\n    )\n  }\n}\n\nexport default BookmarksList\n","import React from 'react'\n\nimport '../assets/Home.css'\n\nconst Home = () => {\n  return (\n    <div className='container left-box'>\n      <div className='row'>\n        <div className='col-md-8'>\n          <span className='anim-left'> A place where your bookmarks</span>\n          <span className='anim-bottom'> can call Home.</span>\n        </div>\n        {/* <div className='col-lg-6' /> */}\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","/* eslint-disable react/jsx-boolean-value */\n/* eslint-disable react/no-unused-state */\nimport React, { useEffect, useState } from 'react'\nimport { Router, Switch, Route } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\n\nimport AppNavbar from './components/AppNavbar'\nimport SignUp from './components/Auth/SignUp'\nimport { Login } from './components/Auth/Login'\nimport { loggedIn } from './services/auth'\nimport BookmarksList from './components/Bookmarks/BookmarksList'\nimport Home from './components/Home'\n\nimport './App.css'\n\nconst browserHistory = createBrowserHistory()\n\nconst App = () => {\n  const [ loggedInUser, setLoggedInUser ] = useState(null)\n\n  useEffect(\n    () => {\n      if (!loggedInUser) {\n        loggedIn().then((user) => {\n          setLoggedInUser(user)\n        })\n      }\n    },\n    [ loggedInUser ]\n  )\n\n  const setUser = (user) => setLoggedInUser(user)\n\n  // update the list of bookmarks after a new bookmark is successfully added to the database\n  // So far, I don't need to manage bookmark state itself\n  const [ , setBookmark ] = useState(null)\n  const saveNewBookmark = (newBookmark) => {\n    setBookmark(newBookmark)\n  }\n\n  return (\n    <div className='App'>\n      <Router history={browserHistory}>\n        <AppNavbar saveUrl={saveNewBookmark} setUser={setUser} userLoggedIn={loggedInUser} />\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/sign-up' render={(props) => <SignUp {...props} setUser={setUser} />} />\n          <Route exact path='/login' render={(props) => <Login {...props} setUser={setUser} />} />\n          <Route\n            exact\n            path='/bookmarks'\n            render={(props) => <BookmarksList {...props} userLoggedIn={loggedInUser} />}\n          />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}