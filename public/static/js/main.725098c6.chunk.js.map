{"version":3,"sources":["services/bookmark.js","components/Tags/TagsList.jsx","components/Bookmarks/BookmarksList.jsx","services/auth.js","components/Bookmarks/Add.jsx","components/Bookmarks/Search.jsx","components/AppNavbar.jsx","components/Auth/Login.jsx","components/Auth/SignUp.jsx","components/Home.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["service","axios","create","baseURL","process","withCredentials","bookmarks","get","then","response","data","catch","error","TagsList","props","activeTags","tagIds","Set","tagNames","length","map","bookmark","_tags","tag","add","_id","name","ids","Object","toConsumableArray","tagsList","tagName","idx","react_default","a","createElement","ListGroup","Item","style","padding","marginTop","marginBottom","backgroundColor","action","onClick","event","tagId","target","classList","contains","indexOfTag","indexOf","splice","handleTagClick","push","toggle","handleClick","as","key","BookmarksList","state","bookmarksList","filteredBookmarks","userLoggedIn","_this","getBookmarks","setState","alert","assertThisInitialized","_filteredBookmarks","forEach","filter","find","includes","prevState","this","prevProps","Jumbotron","height","Row","Col","xs","Tags_TagsList","Fragment","variant","lnk","borderRadius","href","url","title","Alert","Heading","Component","logout","post","Promise","reject","AlertError","errorMessage","InputGroupElement","InputGroup","className","children","InputGroupPrependElement","Prepend","Text","groupText","FormControlElement","FormControl","placeholder","focus","toString","aria-describedby","onChange","ButtonElement","Button","type","text","AddNewBookmark","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","setTitle","_useState5","_useState6","setUrl","_useState7","_useState8","tags","setTags","_useState9","_useState10","showModal","setShowModal","_useState11","_useState12","saving","setSaving","_useState13","_useState14","setError","handleChange","_event$target","newValue","toLowerCase","value","onSubmit","preventDefault","Add_ButtonElement","Modal","centered","show","autoFocus","onHide","Header","Title","Body","Add_InputGroupElement","Add_InputGroupPrependElement","Add_FormControlElement","htmlFor","Footer","arrayOfTags","split","trim","addBookmark","saveUrl","newBookmark","message","Add_AlertError","SearchBookmarks","input","setInput","hidden","filterBookmarks","AppNavbar","handleLogout","setUser","Navbar_default","sticky","bg","expand","Brand","react_router_dom","to","textDecoration","color","Add","Toggle","aria-controls","Collapse","id","Nav_default","Form_default","inline","Search","Link","disabled","useFormInput","initialValue","setValue","Login","email","password","loginError","setLoginError","setErrorMessage","display","request","status","login","user","history","Group","controlId","Col_default","Alert_default","onClose","dismissible","Control","assign","size","required","Button_default","SignUp","signUpError","setSignUpError","signup","Home","browserHistory","createBrowserHistory","App","loggedInUser","setLoggedInUser","useEffect","setBookmark","react_router","components_AppNavbar","exact","path","component","render","Auth_SignUp","Login_Login","Bookmarks_BookmarksList","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.725098c6.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst service = axios.create({\n  baseURL: process.env.REACT_APP_SERVER_API_URL,\n  withCredentials: true\n})\n\nconst addBookmark = (title, url, tags) => {\n  return service\n    .post('/bookmark', { title, url, tags })\n    .then((response) => response.data)\n    .catch((error) => Promise.reject(error))\n}\n\nconst bookmarks = () => {\n  return service.get('/bookmark').then((response) => response.data).catch((error) => error)\n}\n\nconst getBookmarkById = (_id) => {\n  service.get(`/bookmark/:${_id}`).then((bookmark) => bookmark).catch((error) => error)\n}\n\nconst editBookmark = (_id, title, url) => {\n  service.put(`/bookmark/:${_id}`, { title, url }).then((bookmark) => bookmark).catch((error) => error)\n}\n\nconst deleteBookmark = (_id) => {\n  service.delete(`/bookmark/:${_id}`).then((response) => response.data).catch((error) => error)\n}\n\nexport { addBookmark, bookmarks, getBookmarkById, editBookmark, deleteBookmark }\n","import React from 'react'\nimport { ListGroup } from 'react-bootstrap'\n\nconst TagsList = (props) => {\n  const { bookmarks, activeTags } = props\n\n  const handleClick = (tagId, tagName, event) => {\n    if (event.target.classList.contains('active')) {\n      event.target.style.backgroundColor = 'white'\n      const indexOfTag = activeTags.indexOf(tagId)\n      if (indexOfTag !== -1) activeTags.splice(indexOfTag, 1)\n      props.handleTagClick()\n    } else {\n      event.target.style.backgroundColor = 'blue'\n      activeTags.push(tagId)\n      props.handleTagClick()\n    }\n    event.target.classList.toggle('active')\n  }\n\n  // Since a bookmark can have multiple tags I was having duplicated tags\n  // To avoid that I am splitting tags id's and names in two separated Sets\n  const tagIds = new Set()\n  const tagNames = new Set()\n  if (bookmarks.length)\n    bookmarks.map((bookmark) => bookmark._tags.map((tag) => (tagIds.add(tag._id), tagNames.add(tag.name))))\n  const ids = [ ...tagIds ]\n  const tagsList = [ ...tagNames ].map((tagName, idx) => (\n    <ListGroup.Item\n      style={{\n        padding: '10px 20px',\n        marginTop: '1px',\n        marginBottom: '1px',\n        backgroundColor: '#f9f9f9'\n      }}\n      action\n      onClick={(event) => handleClick(ids[idx], tagName, event)}\n      as='li'\n      key={ids[idx]}\n    >\n      {tagName}\n    </ListGroup.Item>\n  ))\n  return (\n    <ListGroup\n      as='ul'\n      style={{\n        padding: '0 20px'\n      }}\n    >\n      {tagsList}\n    </ListGroup>\n  )\n}\n\nexport default TagsList\n","/* eslint-disable react/no-did-update-set-state */\n/* eslint-disable react/no-array-index-key */\nimport React, { Component } from 'react'\nimport { Alert, Col, Jumbotron, ListGroup, Row } from 'react-bootstrap'\nimport { bookmarks } from 'services/bookmark'\nimport { TagsList } from 'components/Tags'\n\nclass BookmarksList extends Component {\n  state = {\n    bookmarksList: [],\n    filteredBookmarks: [],\n    userLoggedIn: this.props.userLoggedIn\n  }\n  activeTags = []\n\n  componentDidMount() {\n    this.getBookmarks()\n  }\n\n  // componentDidUpdate(prevProps, prevState) {\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.setState({ userLoggedIn: this.props.userLoggedIn })\n      this.getBookmarks()\n    }\n  }\n\n  getBookmarks = () => {\n    bookmarks()\n      .then((bookmarks) => {\n        this.setState({ bookmarksList: bookmarks, filteredBookmarks: bookmarks })\n      })\n      .catch((error) => alert(error))\n  }\n\n  handleTagClick = () => {\n    const { activeTags } = this\n    const _filteredBookmarks = []\n    if (activeTags.length) {\n      activeTags.forEach((tagId) => {\n        const _bookmarks = this.state.bookmarksList.filter((bookmark) =>\n          bookmark._tags.find((tag) => tag._id === tagId)\n        )\n        _bookmarks.forEach((bookmark) => {\n          if (!_filteredBookmarks.includes(bookmark)) _filteredBookmarks.push(bookmark)\n        })\n      })\n      this.setState({ filteredBookmarks: _filteredBookmarks })\n    } else {\n      this.setState((prevState) => ({ filteredBookmarks: prevState.bookmarksList }))\n    }\n  }\n\n  render() {\n    return (\n      <Jumbotron style={{ height: '100vh' }}>\n        <Row>\n          <Col xs={2}>\n            <TagsList\n              activeTags={this.activeTags}\n              handleTagClick={this.handleTagClick}\n              bookmarks={this.state.bookmarksList}\n            />\n          </Col>\n          <Col xs={9}>\n            {this.state.userLoggedIn ? (\n              <React.Fragment>\n                <ListGroup variant='flush'>\n                  {this.state.filteredBookmarks.map((lnk, idx) => (\n                    // TODO: Move the styling to a proper css file\n                    <ListGroup.Item\n                      style={{\n                        padding: '25px',\n                        marginTop: '2px',\n                        marginBottom: '5px',\n                        borderRadius: '10px 10px 10px 10px'\n                      }}\n                      key={idx}\n                      as='a'\n                      target='_blank'\n                      href={lnk.url}\n                    >\n                      {lnk.title}\n                      {' - '}\n                      {lnk.url}\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                <Alert variant='danger'>\n                  <Alert.Heading>Protected content</Alert.Heading>\n                  <p>\n                    You need to\n                    <strong>Log in</strong>\n                    or\n                    <strong>Sign up</strong>\n                    first.\n                  </p>\n                </Alert>\n              </React.Fragment>\n            )}\n          </Col>\n        </Row>\n      </Jumbotron>\n    )\n  }\n}\n\nexport default BookmarksList\n","import axios from 'axios'\n\nconst service = axios.create({\n  baseURL: process.env.REACT_APP_SERVER_API_URL,\n  withCredentials: true\n})\n\nconst signup = (name, email, password) => {\n  return service\n    .post('/auth/signup', { name, email, password })\n    .then((response) => {\n      return response.data\n    })\n    .catch((error) => {\n      return Promise.reject(error.request.status)\n    })\n}\n\nconst login = (email, password) => {\n  return service\n    .post('/auth/login', { email, password })\n    .then((response) => {\n      return response.data\n    })\n    .catch((error) => {\n      return Promise.reject(error.request.status)\n    })\n}\n\n// TODO: Return a rejected Promise in the catch\nconst logout = () => {\n  return service\n    .post('/auth/logout')\n    .then((response) => response.data)\n    .catch((error) => Promise.reject(error))\n}\n\nconst loggedIn = () => {\n  return service.get('/auth/loggedin').then((response) => response.data)\n}\n\nexport { signup, login, logout, loggedIn }\n","/* eslint-disable react/prop-types */\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react'\nimport { Alert, Button, Modal, InputGroup, FormControl } from 'react-bootstrap'\nimport { addBookmark } from 'services/bookmark'\n\nconst AlertError = (props) => (\n  <Alert variant='danger'>\n    <Alert.Heading>Something whent wrong</Alert.Heading>\n    <p>{props.errorMessage}</p>\n  </Alert>\n)\n\nconst InputGroupElement = (props) => {\n  return <InputGroup className='mb-3'>{props.children}</InputGroup>\n}\n\nconst InputGroupPrependElement = (props) => {\n  return (\n    <InputGroup.Prepend>\n      <InputGroup.Text>{props.groupText}</InputGroup.Text>\n    </InputGroup.Prepend>\n  )\n}\n\nconst FormControlElement = (props) => {\n  return (\n    <FormControl\n      name={props.name}\n      placeholder={props.placeholder}\n      as='input'\n      focus={props.focus.toString()}\n      aria-describedby={props.name}\n      onChange={props.onChange}\n    />\n  )\n}\n\nconst ButtonElement = (props) => {\n  return (\n    <Button type={props.type} variant={props.variant} onClick={props.onClick}>\n      {props.text}\n    </Button>\n  )\n}\n\nconst AddNewBookmark = (props) => {\n  const [ userLoggedIn, setUserLoggedIn ] = useState(props.userLoggedIn)\n  const [ title, setTitle ] = useState('')\n  const [ url, setUrl ] = useState('')\n  const [ tags, setTags ] = useState('')\n  const [ showModal, setShowModal ] = useState(false)\n  const [ saving, setSaving ] = useState(false)\n  let errorMessage = ''\n  const [ error, setError ] = useState(false)\n\n  const setState = (state, newValue) => {\n    switch (state) {\n      case 'title':\n        setTitle(newValue)\n        break\n      case 'url':\n        setUrl(newValue)\n        break\n      case 'tags':\n        setTags(newValue.toLowerCase())\n        break\n      default:\n        break\n    }\n  }\n\n  const handleCancel = () => {\n    setError(false)\n    setShowModal(false)\n  }\n\n  const handleSave = () => {\n    setSaving(true)\n    const arrayOfTags = tags.split(',').filter((tag) => {\n      if (tag.trim().length > 0) {\n        return tag.trim()\n      }\n    })\n    addBookmark(title, url, arrayOfTags)\n      .then((bookmark) => {\n        setSaving(false)\n        setShowModal(false)\n        props.saveUrl({ newBookmark: bookmark })\n      })\n      .catch((error) => {\n        errorMessage = error.message\n        setShowModal(true)\n        setSaving(false)\n        setError(true)\n      })\n  }\n\n  const handleChange = (event) => {\n    const { name, value } = event.target\n    setState(name, value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    setShowModal(false)\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <ButtonElement\n        type='button'\n        variant='outline-secondary'\n        onClick={() => setShowModal(true)}\n        text='Add'\n      />\n      <Modal centered show={showModal} autoFocus onHide={() => setShowModal(false)}>\n        <Modal.Header>\n          <Modal.Title>Add new bookmark</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <InputGroupElement>\n            <InputGroupPrependElement groupText='www' />\n            <FormControlElement name='url' placeholder='www.example.com' focus onChange={handleChange} />\n          </InputGroupElement>\n          <label htmlFor='url'>Separate tags by , </label>\n          <InputGroupElement>\n            <InputGroupPrependElement groupText='Tags' />\n            <FormControlElement name='tags' placeholder='tag1, tag2,' focus='false' onChange={handleChange} />\n            <InputGroupPrependElement groupText='Title' />\n            <FormControlElement name='title' placeholder='Title' focus='false' onChange={handleChange} />\n          </InputGroupElement>\n        </Modal.Body>\n        <Modal.Footer>\n          <ButtonElement type='submit' variant='danger' onClick={handleCancel} text='Cancel' />\n          <ButtonElement\n            type='submit'\n            variant='success'\n            onClick={handleSave}\n            text={saving ? 'Saving...' : 'Save'}\n          />\n        </Modal.Footer>\n        {error && <AlertError errorMessage={errorMessage} />}\n      </Modal>\n    </form>\n  )\n}\n\nexport default AddNewBookmark\n","import React, { useState } from 'react'\nimport { FormControl } from 'react-bootstrap'\n\nconst SearchBookmarks = (props) => {\n  const [ input, setInput ] = useState('')\n\n  const handleChange = (event) => {\n    const { value } = event.target\n    props.filterBookmarks(value)\n    setInput({ input: value })\n  }\n\n  return (\n    <FormControl\n      hidden\n      placeholder={props.placeholder}\n      onChange={handleChange}\n      value={input}\n      className='mr-sm-2'\n    />\n  )\n}\n\nexport default SearchBookmarks\n","/* eslint-disable react/no-did-update-set-state */\n/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\n\nimport { logout } from 'services/auth'\nimport AddNewBookmark from './Bookmarks/Add'\nimport SearchBookmarks from './Bookmarks/Search'\n\nclass AppNavbar extends Component {\n  state = {\n    userLoggedIn: this.props.userLoggedIn\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.userLoggedIn !== prevProps.userLoggedIn) {\n      this.setState({\n        userLoggedIn: this.props.userLoggedIn\n      })\n    }\n  }\n\n  handleLogout = () => {\n    logout().then(() => {\n      this.setState({ userLoggedIn: null })\n      this.props.setUser(null)\n    })\n  }\n\n  render() {\n    return (\n      <Navbar sticky='top' variant='dark' bg='dark' expand='lg'>\n        <Navbar.Brand>\n          {/* TODO: Move style to css file */}\n          <Link to='/bookmarks' style={{ textDecoration: 'none', color: '#9A9DA0' }}>\n            Bookmarks\n          </Link>\n        </Navbar.Brand>\n        <Navbar>\n          {this.state.userLoggedIn && (\n            <AddNewBookmark saveUrl={this.props.saveUrl} userLoggedIn={this.state.userLoggedIn} />\n          )}\n        </Navbar>\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\n        <Navbar.Collapse className='justify-content-end' id='basic-navbar-nav'>\n          <Nav hidden={!this.state.userLoggedIn} className='justify-content-center'>\n            <Nav.Item>\n              <Form inline>\n                <SearchBookmarks placeholder='Search...' />\n              </Form>\n            </Nav.Item>\n          </Nav>\n          <Nav className='justify-content-end'>\n            {this.state.userLoggedIn ? (\n              <React.Fragment>\n                <Nav.Item>\n                  <Nav.Link variant='outline-info'>\n                    {/* TODO: Move style to css file */}\n                    <Link\n                      variant='outline-info'\n                      to='/'\n                      onClick={this.handleLogout}\n                      style={{ textDecoration: 'none', color: '#9A9DA0' }}\n                    >\n                      Log out\n                    </Link>\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link variant='outline-info'>\n                    {/* TODO: Move style to css file */}\n                    <Link to='/Settings' disabled style={{ textDecoration: 'none', color: '#9A9DA0' }}>\n                      Settings\n                    </Link>\n                  </Nav.Link>\n                </Nav.Item>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                <Nav.Item>\n                  <Nav.Link variant='outline-linfo'>\n                    {/* TODO: Move style to css file */}\n                    <Link to='/login' style={{ textDecoration: 'none', color: '#9A9DA0' }}>\n                      Log in\n                    </Link>\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link variant='outline-info'>\n                    {/* TODO: Move style to css file */}\n                    <Link to='/sign-up' style={{ textDecoration: 'none', color: '#9A9DA0' }}>\n                      Sign up\n                    </Link>\n                  </Nav.Link>\n                </Nav.Item>\n              </React.Fragment>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    )\n  }\n}\n\nexport default AppNavbar\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react'\nimport Alert from 'react-bootstrap/Alert'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\n\nimport { login } from '../../services/auth'\n\nimport '../../assets/auth/auth.css'\n\n// TODO: Move this to a proper file\nconst useFormInput = (initialValue) => {\n  const [ value, setValue ] = useState(initialValue)\n\n  const handleChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  return {\n    value,\n    onChange: handleChange\n  }\n}\n\nconst Login = (props) => {\n  const email = useFormInput('')\n  const password = useFormInput('')\n  const [ loginError, setLoginError ] = useState(false)\n  const [ errorMessage, setErrorMessage ] = useState('')\n\n  const onSubmit = (event) => {\n    event.preventDefault()\n    setLoginError(false)\n    login(email.value, password.value)\n      .then((user) => {\n        props.setUser(user)\n        props.history.push('/bookmarks')\n      })\n      .catch((error) => {\n        setLoginError(true)\n        switch (error) {\n          case 0:\n            // setErrorMessage('Could not connect to server, try again later. 🙁')\n            setErrorMessage('Could not connect to server 🙁')\n            break\n          case 401:\n            setErrorMessage('Incorrect username or password.')\n            break\n          default:\n            setErrorMessage('Something went wrong... 😩')\n            break\n        }\n        props.setUser(null)\n      })\n  }\n\n  const handleDismiss = (show) => setLoginError(show)\n\n  return (\n    <div className='container'>\n      <Form display='block' onSubmit={onSubmit}>\n        <Form.Group as={Row} controlId='errorMessage'>\n          <Col>\n            {loginError ? (\n              <Alert variant='danger' onClose={handleDismiss} dismissible>\n                <Alert.Heading>You got an error</Alert.Heading>\n                <p>{errorMessage}</p>\n              </Alert>\n            ) : (\n              <React.Fragment />\n            )}\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formPlaintextEmail'>\n          <Col>\n            <Form.Control\n              size='lg'\n              type='email'\n              name='email'\n              placeholder='example@email.com'\n              {...email}\n              required\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formPlaintextPassword'>\n          <Col>\n            <Form.Control\n              size='lg'\n              type='password'\n              name='password'\n              placeholder='Enter your password'\n              {...password}\n              required\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group>\n          <Button type='submit' variant='outline-primary'>\n            Login\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n\nexport { useFormInput, Login }\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react'\nimport Alert from 'react-bootstrap/Alert'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport { signup } from '../../services/auth'\nimport { useFormInput } from './Login'\n\nimport '../../assets/auth/auth.css'\n\nconst SignUp = (props) => {\n  const name = useFormInput('')\n  const email = useFormInput('')\n  const password = useFormInput('')\n  const [ signUpError, setSignUpError ] = useState(false)\n  const [ errorMessage, setErrorMessage ] = useState('')\n\n  const onSubmit = (event) => {\n    event.preventDefault()\n    signup(name.value, email.value, password.value)\n      .then((user) => {\n        props.setUser(user)\n        props.history.push('/bookmarks')\n      })\n      .catch((error) => {\n        props.setUser(null)\n        setSignUpError(true)\n        switch (error) {\n          case 0:\n            setErrorMessage('Could not connect to server 🙁')\n            break\n          case 409:\n            setErrorMessage('The email already exists')\n            break\n          default:\n            setErrorMessage('Something went wrong... 😩')\n            break\n        }\n      })\n  }\n\n  const handleDismiss = (show) => setSignUpError(show)\n\n  return (\n    <div className='container'>\n      <Form display='block' onSubmit={onSubmit}>\n        <Form.Group as={Row} controlId='errorMessage'>\n          <Col>\n            {signUpError && (\n              <Alert variant='danger' onClose={handleDismiss} dismissible>\n                <Alert.Heading>You got an error </Alert.Heading>\n                <p>{errorMessage}</p>\n              </Alert>\n            )}\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formPlaintextPassword'>\n          <Col>\n            <Form.Control\n              size='lg'\n              type='text'\n              name='name'\n              placeholder='Enter your name'\n              {...name}\n              required\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formPlaintextPassword'>\n          <Col>\n            <Form.Control\n              size='lg'\n              type='email'\n              name='email'\n              placeholder='example@email.com'\n              {...email}\n              required\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formPlaintextPassword'>\n          <Col>\n            <Form.Control\n              size='lg'\n              type='password'\n              name='password'\n              placeholder='Enter your password'\n              required\n              {...password}\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group>\n          <Button type='submit' variant='outline-primary'>\n            Sign up\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n\nexport default SignUp\n","import React from 'react'\n\nimport 'assets/Home.css'\n\nconst Home = () => {\n  return (\n    <div className='container left-box'>\n      <div className='row'>\n        <div className='col-md-8'>\n          <span className='anim-left'> A place where your bookmarks</span>\n          <span className='anim-bottom'> can call Home.</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","/* eslint-disable react/jsx-boolean-value */\n/* eslint-disable react/no-unused-state */\nimport React, { useEffect, useState } from 'react'\nimport { Router, Switch, Route } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\n\nimport BookmarksList from 'components/Bookmarks/BookmarksList'\nimport AppNavbar from 'components/AppNavbar'\nimport SignUp from 'components/Auth/SignUp'\nimport { Login } from 'components/Auth/Login'\nimport { loggedIn } from 'services/auth'\nimport Home from 'components/Home'\n\nimport './App.css'\n\nconst browserHistory = createBrowserHistory()\n\nconst App = () => {\n  const [ loggedInUser, setLoggedInUser ] = useState(null)\n\n  useEffect(\n    () => {\n      if (!loggedInUser) {\n        loggedIn().then((user) => {\n          setLoggedInUser(user)\n        })\n      }\n    },\n    [ loggedInUser ]\n  )\n\n  const setUser = (user) => setLoggedInUser(user)\n\n  // update the list of bookmarks after a new bookmark is successfully added to the database\n  // So far, I don't need to manage bookmark state itself\n  const [ , setBookmark ] = useState(null)\n  const saveNewBookmark = (newBookmark) => {\n    setBookmark(newBookmark)\n  }\n\n  return (\n    <div className='App'>\n      <Router history={browserHistory}>\n        <AppNavbar saveUrl={saveNewBookmark} setUser={setUser} userLoggedIn={loggedInUser} />\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/sign-up' render={(props) => <SignUp {...props} setUser={setUser} />} />\n          <Route exact path='/login' render={(props) => <Login {...props} setUser={setUser} />} />\n          <Route\n            exact\n            path='/bookmarks'\n            render={(props) => <BookmarksList {...props} userLoggedIn={loggedInUser} />}\n          />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}