{"version":3,"sources":["services/auth.js","components/AppNavbar.jsx","services/bookmark.js","components/AppBottomBar.jsx","components/Auth/Login.jsx","components/Auth/SignUp.jsx","components/Bookmarks/BookmarksList.jsx","components/Home.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["service","axios","create","baseURL","process","withCredentials","logout","post","then","response","data","catch","err","AppNavbar","state","userLoggedIn","_this","props","handleLogout","setState","setUser","prevProps","this","react_default","a","createElement","Navbar_default","sticky","variant","bg","expand","Brand","react_router_dom","to","style","textDecoration","color","Toggle","aria-controls","Collapse","id","Nav_default","className","hidden","Item","Form_default","inline","FormControl_default","type","disabled","placeholder","Fragment","Link","onClick","Component","addBookmark","title","url","bookmark","error","scrape","anyURL","res","e","AppBottomBar","bookmarkURL","handleChange","event","_event$target","target","name","value","Object","defineProperty","handleSubmit","preventDefault","startsWith","saveUrl","fixed","OverlayTrigger_default","placement","overlay","Tooltip_default","onSubmit","onChange","useFormInput","initialValue","_useState","useState","_useState2","slicedToArray","setValue","Login","email","password","display","Promise","reject","concat","login","user","history","push","Group","as","Row","controlId","Col_default","Control","assign","size","Button_default","SignUp","signup","BookmarksList","bookmarksList","getBookmarks","get","prevState","Jumbotron_default","height","ListGroup_default","map","lnk","idx","padding","marginTop","marginBottom","borderRadius","key","href","Alert_default","Heading","Home","browserHistory","createBrowserHistory","App","loggedInUser","setLoggedInUser","useEffect","_useState3","setBookmark","react_router","components_AppNavbar","exact","path","component","render","Auth_SignUp","Login_Login","Bookmarks_BookmarksList","components_AppBottomBar","newBookmark","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d78503cb.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst service = axios.create({\n  baseURL: process.env.REACT_APP_SERVER_API_URL,\n  withCredentials: true,\n})\n\nconst signup = (name, email, password) => {\n  return service\n    .post('/auth/signup', { name, email, password })\n    .then((response) => {\n      return response.data\n    })\n    .catch((err) => err)\n}\n\nconst login = (email, password) => {\n  return service\n    .post('/auth/login', { email, password })\n    .then((response) => {\n      return response.data\n    })\n    .catch((err) => {\n      return Promise.reject(`${err}`)\n    })\n}\n\nconst logout = () => {\n  return service.post('/auth/logout').then((response) => response.data).catch((err) => err)\n}\n\nconst loggedIn = () => {\n  return service.get('/auth/loggedin').then((response) => response.data)\n}\n\nexport { signup, login, logout, loggedIn }\n","/* eslint-disable react/no-did-update-set-state */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\n\nimport { logout } from '../services/auth'\n\nclass AppNavbar extends Component {\n  state = {\n    userLoggedIn: this.props.userLoggedIn\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.userLoggedIn !== prevProps.userLoggedIn) {\n      this.setState({\n        userLoggedIn: this.props.userLoggedIn\n      })\n    }\n  }\n\n  handleLogout = () => {\n    logout().then(() => {\n      this.setState({ userLoggedIn: null })\n      this.props.setUser(null)\n    })\n  }\n\n  render() {\n    return (\n      <Navbar sticky='top' variant='dark' bg='dark' expand='lg'>\n        <Navbar.Brand>\n          {/* TODO: Move style to css file */}\n          <Link to='/bookmarks' style={{ textDecoration: 'none', color: '#9A9DA0' }}>\n            Bookmarks\n          </Link>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\n        <Navbar.Collapse id='basic-navbar-nav'>\n          <Nav className='justify-content-start mr-auto'>\n            {/* Disable dropdown menus for now, I'll back to it later */}\n            {/* <NavDropdown hidden={!this.state.userLoggedIn} title='Add' id='basic-nav-dropdown'>\n              <NavDropdown.Item href='#'>New link</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href='#'>New tag</NavDropdown.Item>\n            </NavDropdown> */}\n          </Nav>\n          <Nav hidden={!this.state.userLoggedIn} className='justify-content-center'>\n            <Nav.Item>\n              <Form inline>\n                <FormControl type='text' disabled placeholder='Search...' className='mr-sm-2' />\n              </Form>\n            </Nav.Item>\n          </Nav>\n          <Nav className='justify-content-end'>\n            {this.state.userLoggedIn ? (\n              <React.Fragment>\n                <Nav.Item>\n                  <Nav.Link variant='outline-info'>\n                    {/* TODO: Move style to css file */}\n                    <Link\n                      variant='outline-info'\n                      to='/'\n                      onClick={this.handleLogout}\n                      style={{ textDecoration: 'none', color: '#9A9DA0' }}\n                    >\n                      Log out\n                    </Link>\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link variant='outline-info'>\n                    {/* TODO: Move style to css file */}\n                    <Link to='/Settings' disabled style={{ textDecoration: 'none', color: '#9A9DA0' }}>\n                      Settings\n                    </Link>\n                  </Nav.Link>\n                </Nav.Item>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                <Nav.Item>\n                  <Nav.Link variant='outline-linfo'>\n                    {/* TODO: Move style to css file */}\n                    <Link to='/login' style={{ textDecoration: 'none', color: '#9A9DA0' }}>\n                      Log in\n                    </Link>\n                  </Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link variant='outline-info'>\n                    {/* TODO: Move style to css file */}\n                    <Link to='/sign-up' style={{ textDecoration: 'none', color: '#9A9DA0' }}>\n                      Sign up\n                    </Link>\n                  </Nav.Link>\n                </Nav.Item>\n              </React.Fragment>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    )\n  }\n}\n\nexport default AppNavbar\n","import axios from 'axios'\n\nconst service = axios.create({\n  baseURL: process.env.REACT_APP_SERVER_API_URL,\n  withCredentials: true,\n})\n\nconst addBookmark = (title, url) => {\n  return service.post('/bookmark', { title, url }).then((bookmark) => bookmark).catch((error) => error)\n}\n\nconst bookmarks = () => {\n  return service.get('/bookmark').then((bookmarks) => bookmarks).catch((error) => error)\n}\n\nconst getBookmarkById = (_id) => {\n  service.get(`/bookmark/:${_id}`).then((bookmark) => bookmark).catch((error) => error)\n}\n\nconst editBookmark = (_id, title, url) => {\n  service.put(`/bookmark/:${_id}`, { title, url }).then((bookmark) => bookmark).catch((error) => error)\n}\n\nconst deleteBookmark = (_id) => {\n  service.delete(`/bookmark/:${_id}`).then((response) => response.data).catch((error) => error)\n}\n\nconst scrape = (anyURL) => {\n  return service\n    .post('/bookmark/scrape', { anyURL })\n    .then((res) => {\n      return res.data\n    })\n    .catch((e) => e)\n  //TODO: Handle the error above\n}\n\nexport { addBookmark, bookmarks, getBookmarkById, editBookmark, deleteBookmark, scrape }\n","/* eslint-disable react/no-did-update-set-state */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Form from 'react-bootstrap/Form'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Tooltip from 'react-bootstrap/Tooltip'\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport { addBookmark, scrape } from '../services/bookmark'\n\nclass AppBottomBar extends Component {\n  state = {\n    bookmarkURL: '',\n    userLoggedIn: this.props.userLoggedIn,\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.userLoggedIn !== prevProps.userLoggedIn) {\n      this.setState({\n        userLoggedIn: this.props.userLoggedIn,\n      })\n    }\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target\n    this.setState({\n      [name]: value,\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n\n    let { bookmarkURL } = this.state\n    if (!bookmarkURL.startsWith('http')) {\n      bookmarkURL = 'https://' + bookmarkURL\n    }\n    scrape(bookmarkURL).then((title) => {\n      addBookmark(title, bookmarkURL)\n        .then(() => {\n          this.props.saveUrl({\n            title,\n            bookmarkURL,\n          })\n          this.setState({\n            bookmarkURL: '',\n          })\n        })\n        .catch(() => {\n          this.setState({\n            bookmarkURL: 'Something went wrong...',\n          })\n        })\n    })\n  }\n\n  render() {\n    return (\n      <Navbar hidden={!this.state.userLoggedIn} fixed='bottom' variant='dark' bg='dark' expand='lg'>\n        <Navbar.Collapse>\n          <Nav className='justify-content-center'>\n            <Nav.Item>\n              <OverlayTrigger\n                placement='top'\n                overlay={<Tooltip id='addNewBookmark'> Add new bookmark </Tooltip>}\n              >\n                <Form inline onSubmit={this.handleSubmit}>\n                  <FormControl\n                    name='bookmarkURL'\n                    value={this.state.bookmarkURL}\n                    type='text'\n                    onChange={this.handleChange}\n                    placeholder='https://...'\n                    className='mr-sm-2'\n                  />\n                </Form>\n              </OverlayTrigger>\n            </Nav.Item>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    )\n  }\n}\n\nexport default AppBottomBar\n","/* eslint-disable react/prop-types */\nimport React, { useState } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport { login } from '../../services/auth'\n\nimport '../../assets/auth/auth.css'\n\n// TODO: Move this to a proper file\nconst useFormInput = (initialValue) => {\n  const [ value, setValue ] = useState(initialValue)\n\n  const handleChange = (e) => {\n    setValue(e.target.value)\n  }\n\n  return {\n    value,\n    onChange: handleChange\n  }\n}\n\nconst Login = (props) => {\n  const email = useFormInput('')\n  const password = useFormInput('')\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n    login(email.value, password.value)\n      .then((user) => {\n        props.setUser(user)\n        props.history.push('/bookmarks')\n      })\n      .catch(() => {\n        // TODO: Handle .catch -> Display a  message to the user\n        props.setUser(null)\n      })\n  }\n\n  return (\n    <div className='container'>\n      <Form display='block' onSubmit={onSubmit}>\n        <Form.Group as={Row} controlId='formPlaintextEmail'>\n          <Col>\n            <Form.Control size='lg' type='email' name='email' placeholder='example@email.com' {...email} />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formPlaintextPassword'>\n          <Col>\n            <Form.Control\n              size='lg'\n              type='password'\n              name='password'\n              placeholder='Enter your password'\n              {...password}\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group>\n          <Button type='submit' variant='outline-primary'>\n            Login\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n\nexport { useFormInput, Login }\n","/* eslint-disable react/prop-types */\nimport React from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport { signup } from '../../services/auth'\nimport { useFormInput } from './Login'\n\nimport '../../assets/auth/auth.css'\n\nconst SignUp = (props) => {\n  const name = useFormInput('')\n  const email = useFormInput('')\n  const password = useFormInput('')\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n    signup(name.value, email.value, password.value)\n      .then((user) => {\n        props.setUser(user)\n        props.history.push('/bookmarks')\n      })\n      .catch(() => props.setUser(null))\n  }\n\n  return (\n    <div className='container'>\n      <Form display='block' onSubmit={onSubmit}>\n        <Form.Group as={Row} controlId='formPlaintextPassword'>\n          <Col>\n            <Form.Control size='lg' type='text' name='name' placeholder='Enter your name' {...name} />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formPlaintextPassword'>\n          <Col>\n            <Form.Control size='lg' type='email' name='email' placeholder='example@email.com' {...email} />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId='formPlaintextPassword'>\n          <Col>\n            <Form.Control\n              size='lg'\n              type='password'\n              name='password'\n              placeholder='Enter your password'\n              {...password}\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group>\n          <Button type='submit' variant='outline-primary'>\n            Sign up\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n\nexport default SignUp\n","/* eslint-disable */\n/* eslint-disable react/prop-types */\n/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react'\nimport Alert from 'react-bootstrap/Alert'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport axios from 'axios'\n\nclass BookmarksList extends Component {\n  state = {\n    bookmarksList: [],\n    userLoggedIn: this.props.userLoggedIn,\n  }\n\n  componentDidMount() {\n    this.getBookmarks()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      this.setState({ userLoggedIn: this.props.userLoggedIn })\n      this.getBookmarks()\n    }\n  }\n\n  getBookmarks = () => {\n    axios\n      .get(`${process.env.REACT_APP_SERVER_API_URL}/bookmark`, { withCredentials: true })\n      .then((response) => {\n        this.setState({\n          bookmarksList: response.data,\n        })\n      })\n      .catch((e) => e)\n  }\n\n  render() {\n    return (\n      <Jumbotron style={{ height: '100vh' }}>\n        {this.state.userLoggedIn ? (\n          <React.Fragment>\n            <ListGroup variant='flush'>\n              {this.state.bookmarksList.map((lnk, idx) => (\n                // TODO: Move the styling to a proper css file\n                <ListGroup.Item\n                  style={{\n                    padding: '25px',\n                    marginTop: '2px',\n                    marginBottom: '5px',\n                    borderRadius: '10px 10px 10px 10px',\n                  }}\n                  key={idx}\n                  as='a'\n                  target='_blank'\n                  href={lnk.url}>\n                  {lnk.title} - {lnk.url}\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <Alert variant='danger'>\n              <Alert.Heading>Protected content</Alert.Heading>\n              <p>\n                You need to <strong>Log in</strong> or <strong>Sign up</strong> first.\n              </p>\n            </Alert>\n          </React.Fragment>\n        )}\n      </Jumbotron>\n    )\n  }\n}\n\nexport default BookmarksList\n","import React from 'react'\n\nimport '../assets/Home.css'\n\nconst Home = () => {\n  return (\n    <div className='container left-box'>\n      <div className='row'>\n        <div className='col-md-8'>\n          <span className='anim-left'> A place where your bookmarks</span>\n          <span className='anim-bottom'> can call Home.</span>\n        </div>\n        {/* <div className='col-lg-6' /> */}\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","/* eslint-disable react/jsx-boolean-value */\n/* eslint-disable react/no-unused-state */\nimport React, { useEffect, useState } from 'react'\nimport { Router, Switch, Route } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\n\nimport AppNavbar from './components/AppNavbar'\nimport AppBottomBar from './components/AppBottomBar'\nimport SignUp from './components/Auth/SignUp'\nimport { Login } from './components/Auth/Login'\nimport { loggedIn } from './services/auth'\nimport BookmarksList from './components/Bookmarks/BookmarksList'\n// import ProtectedRoute from './components/ProtectRoute'\n\nimport './App.css'\nimport Home from './components/Home'\n\nconst browserHistory = createBrowserHistory()\n\n// TODO: Use Context...\nconst App = () => {\n  const [ loggedInUser, setLoggedInUser ] = useState(null)\n\n  useEffect(\n    () => {\n      if (!loggedInUser) {\n        loggedIn().then((user) => {\n          setLoggedInUser(user)\n        })\n      }\n    },\n    [ loggedInUser ]\n  )\n\n  const setUser = (user) => setLoggedInUser(user)\n\n  // update the list of bookmarks after a new bookmark is successfully added to the database\n  const [ , setBookmark ] = useState(null)\n  const saveNewBookmark = (newBookmark) => {\n    setBookmark(newBookmark)\n  }\n\n  return (\n    <div className='App'>\n      <Router history={browserHistory}>\n        <AppNavbar setUser={setUser} userLoggedIn={loggedInUser} />\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/sign-up' render={(props) => <SignUp {...props} setUser={setUser} />} />\n          <Route exact path='/login' render={(props) => <Login {...props} setUser={setUser} />} />\n          <Route\n            exact\n            path='/bookmarks'\n            render={(props) => <BookmarksList {...props} userLoggedIn={loggedInUser} />}\n          />\n        </Switch>\n        <AppBottomBar saveUrl={saveNewBookmark} userLoggedIn={loggedInUser} />\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}